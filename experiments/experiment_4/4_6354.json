{
    "avg_time": 571.8972392876943,
    "experiment": {
        "number": 4,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 8.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].\nAllow taking multiple actions after best program.\nChange (TIMES, action) to (action, TIMES).\nLast direction higher probability, other directions lower uniform probability.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1), TIMES)",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5)]",
            "time": 558.4635968208313,
            "best_reward_over_time": "(0.6732029914855957, 0.7725448608398438)(1.7749810218811035, 0.7818145751953125)(2.638493061065674, 0.9250946044921875)(15.689800024032593, 1.1490249633789062)(16.915519952774048, 1.554046630859375)(17.389238119125366, 2.0941390991210938)(23.23535990715027, 2.4311447143554688)(29.120805025100708, 3.042388916015625)(30.292367935180664, 3.8575668334960938)(30.99226212501526, 4.607643127441406)(31.901999950408936, 7.0390625)(33.004157066345215, 10.856159210205078)(34.29845094680786, 11.589405059814453)(38.78673791885376, 11.693546295166016)(49.3405499458313, 11.936767578125)(57.03926706314087, 12.4573974609375)(58.33826208114624, 13.262992858886719)(59.71133804321289, 15.958106994628906)(61.27695894241333, 20.48031997680664)(63.07923889160156, 24.401531219482422)(65.03521704673767, 27.525588989257812)(69.36701202392578, 37.16816711425781)(105.49338412284851, 44.15298843383789)(132.55347108840942, 44.24580001831055)(135.76944589614868, 44.32046890258789)(138.8146619796753, 44.45017433166504)(154.3096640110016, 51.92791557312012)(158.71147799491882, 58.03023147583008)(238.00721502304077, 63.68635845184326)(263.2753369808197, 65.39901351928711)(284.67129707336426, 65.73722743988037)(349.34714698791504, 68.38045024871826)(394.6745870113373, 72.82581305503845)",
            "programs_evaluated": 197
        },
        {
            "number": 2,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5)]",
            "time": 579.5974290370941,
            "best_reward_over_time": "(0.15788698196411133, 0.7725448608398438)(1.1116549968719482, 0.7818145751953125)(1.874467134475708, 0.9250946044921875)(15.663536071777344, 1.1490249633789062)(16.940006017684937, 1.554046630859375)(17.403276205062866, 2.0941390991210938)(22.86750602722168, 2.4311447143554688)(28.72138214111328, 3.042388916015625)(29.869256019592285, 3.8575668334960938)(30.58547616004944, 4.607643127441406)(31.49690318107605, 7.0390625)(32.61956310272217, 10.856159210205078)(33.9358651638031, 11.589405059814453)(38.168907165527344, 11.693546295166016)(48.482166051864624, 11.936767578125)(56.08896207809448, 12.4573974609375)(57.41412401199341, 13.262992858886719)(58.849457025527954, 15.958106994628906)(60.47805118560791, 20.48031997680664)(62.327089071273804, 24.401531219482422)(64.30251502990723, 27.525588989257812)(69.44806599617004, 37.16816711425781)(108.3470401763916, 44.15298843383789)(137.3243842124939, 44.24580001831055)(140.92115116119385, 44.32046890258789)(144.62175798416138, 44.45017433166504)(160.7523741722107, 51.92791557312012)(165.28840112686157, 58.03023147583008)(250.70080399513245, 63.68635845184326)(277.08472514152527, 65.39901351928711)(299.2691559791565, 65.73722743988037)(365.69745802879333, 68.38045024871826)(411.7783131599426, 72.82581305503845)",
            "programs_evaluated": 197
        },
        {
            "number": 3,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5)]",
            "time": 577.6306920051575,
            "best_reward_over_time": "(0.15807700157165527, 0.7725448608398438)(0.9639708995819092, 0.7818145751953125)(1.5562269687652588, 0.9250946044921875)(14.618807077407837, 1.1490249633789062)(15.862195014953613, 1.554046630859375)(16.36783194541931, 2.0941390991210938)(22.020071029663086, 2.4311447143554688)(27.805690050125122, 3.042388916015625)(28.946560859680176, 3.8575668334960938)(29.64794898033142, 4.607643127441406)(30.587066888809204, 7.0390625)(31.732578992843628, 10.856159210205078)(32.9765100479126, 11.589405059814453)(37.470454931259155, 11.693546295166016)(48.19446086883545, 11.936767578125)(55.77381086349487, 12.4573974609375)(57.16646885871887, 13.262992858886719)(58.58979797363281, 15.958106994628906)(60.21951103210449, 20.48031997680664)(61.99481201171875, 24.401531219482422)(64.01838994026184, 27.525588989257812)(69.20632195472717, 37.16816711425781)(108.18797588348389, 44.15298843383789)(137.45395803451538, 44.24580001831055)(140.61475491523743, 44.32046890258789)(144.0899178981781, 44.45017433166504)(159.53635096549988, 51.92791557312012)(164.09348797798157, 58.03023147583008)(248.31737089157104, 63.68635845184326)(274.7230269908905, 65.39901351928711)(296.7847099304199, 65.73722743988037)(365.3036608695984, 68.38045024871826)(413.00754404067993, 72.82581305503845)",
            "programs_evaluated": 197
        }
    ],
    "world": {
        "seed": 6354,
        "description": "Many trees. Small hill."
    }
}
