{
    "standard_deviation": 8.952880589211748,
    "avg_time": 434.24352439244586,
    "experiment": {
        "number": 4,
        "description": "Partial solution: reward > best_reward.\nCycle length 8.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].\nAllow taking multiple actions after best program.\nChange (TIMES, action) to (action, TIMES).\nLast direction higher probability, other directions lower uniform probability.",
        "grammar": [
            "SEQ => ACT",
            "ACT => [A]",
            "ACT => [ACT; A]",
            "A => (Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1), TIMES)",
            "DIR => 1",
            "DIR => 2",
            "DIR => 4",
            "DIR => 8",
            "DIR => 5",
            "DIR => 9",
            "DIR => 6",
            "DIR => 10",
            "TIMES => 5",
            "TIMES => 10",
            "TIMES => 25",
            "TIMES => 50",
            "TIMES => 75",
            "TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50)]",
            "time": 423.9665970802307,
            "best_reward_over_time": "(0.7014632225036621, 0.7725448608398438)(1.8414430618286133, 0.7818145751953125)(2.7133049964904785, 0.9250946044921875)(17.222000122070312, 1.1490249633789062)(18.607972145080566, 1.554046630859375)(19.117225170135498, 2.0941390991210938)(25.252876043319702, 2.4311447143554688)(31.43310523033142, 3.042388916015625)(32.65301322937012, 3.8575668334960938)(33.38814616203308, 4.607643127441406)(34.342825174331665, 7.0390625)(35.47116303443909, 10.856159210205078)(36.8219780921936, 11.589405059814453)(41.38719916343689, 11.693546295166016)(52.87193822860718, 11.936767578125)(60.96040415763855, 12.4573974609375)(62.33951115608215, 13.262992858886719)(63.81237316131592, 15.958106994628906)(65.3802580833435, 20.48031997680664)(67.12127614021301, 24.401531219482422)(69.16828107833862, 27.525588989257812)(73.94146299362183, 28.35403823852539)(76.04039907455444, 29.31139373779297)(78.42826700210571, 31.804244995117188)(80.65459513664246, 35.52184295654297)(83.1690821647644, 37.16816711425781)(113.15801405906677, 42.26262283325195)(134.85056710243225, 44.15298843383789)(138.71791315078735, 44.449546813964844)(154.31289720535278, 44.45017433166504)(166.77889013290405, 49.18971061706543)(171.12797808647156, 54.59103965759277)(179.88774800300598, 56.37138366699219)(191.75401616096497, 58.03023147583008)(234.88469099998474, 58.42730522155762)(249.8721890449524, 61.777822494506836)(276.2970361709595, 65.11113452911377)(282.00809717178345, 65.73722743988037)(364.68092012405396, 68.27448177337646)(390.22833013534546, 68.38045024871826)(396.96916604042053, 68.38840818405151)(403.11735820770264, 68.47191429138184)(415.6677670478821, 72.96094405651093)(422.50139021873474, 173.17441391944885)",
            "programs_evaluated": 176
        },
        {
            "number": 2,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50)]",
            "time": 440.3528869152069,
            "best_reward_over_time": "(0.1591329574584961, 0.7725448608398438)(1.0259039402008057, 0.7818145751953125)(1.7320318222045898, 0.9250946044921875)(16.267119884490967, 1.1490249633789062)(17.756630897521973, 1.554046630859375)(18.281461000442505, 2.0941390991210938)(24.44361686706543, 2.4311447143554688)(30.59334397315979, 3.042388916015625)(31.81338405609131, 3.8575668334960938)(32.56697201728821, 4.607643127441406)(33.52601504325867, 7.0390625)(34.68052697181702, 10.856159210205078)(36.08181691169739, 11.589405059814453)(40.90559482574463, 11.693546295166016)(52.50111484527588, 11.936767578125)(60.85708689689636, 12.4573974609375)(62.297698974609375, 13.262992858886719)(63.848609924316406, 15.958106994628906)(65.5427360534668, 20.48031997680664)(67.25832200050354, 24.401531219482422)(69.34502005577087, 27.525588989257812)(74.21664500236511, 28.35403823852539)(76.38349795341492, 29.31139373779297)(78.69044399261475, 31.804244995117188)(81.12983393669128, 35.52184295654297)(83.90615892410278, 37.16816711425781)(114.42138195037842, 42.26262283325195)(136.69433999061584, 44.15298843383789)(140.88590383529663, 44.449546813964844)(156.62112188339233, 44.45017433166504)(169.05386805534363, 49.18971061706543)(173.64213395118713, 54.59103965759277)(182.52381205558777, 56.37138366699219)(195.53193998336792, 58.03023147583008)(240.12442183494568, 58.42730522155762)(256.0976839065552, 61.777822494506836)(283.46008682250977, 65.11113452911377)(289.5408480167389, 65.73722743988037)(377.0558350086212, 68.27448177337646)(405.8790910243988, 68.38045024871826)(412.9644329547882, 68.38840818405151)(419.83870482444763, 68.47191429138184)(433.1467649936676, 72.96094405651093)(440.3528230190277, 173.17441391944885)",
            "programs_evaluated": 176
        },
        {
            "number": 3,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50)]",
            "time": 438.4110891819,
            "best_reward_over_time": "(0.15243101119995117, 0.7725448608398438)(1.0328638553619385, 0.7818145751953125)(1.7572689056396484, 0.9250946044921875)(16.061246871948242, 1.1490249633789062)(17.42471694946289, 1.554046630859375)(17.940469980239868, 2.0941390991210938)(24.17269206047058, 2.4311447143554688)(30.419976949691772, 3.042388916015625)(31.651737928390503, 3.8575668334960938)(32.40894293785095, 4.607643127441406)(33.386828899383545, 7.0390625)(34.57678198814392, 10.856159210205078)(35.9614999294281, 11.589405059814453)(40.82941699028015, 11.693546295166016)(52.67984485626221, 11.936767578125)(61.20642304420471, 12.4573974609375)(62.69186592102051, 13.262992858886719)(64.2552809715271, 15.958106994628906)(65.90389895439148, 20.48031997680664)(67.83539891242981, 24.401531219482422)(69.97872591018677, 27.525588989257812)(74.82584595680237, 28.35403823852539)(77.05335187911987, 29.31139373779297)(79.51271200180054, 31.804244995117188)(82.07956886291504, 35.52184295654297)(84.83079600334167, 37.16816711425781)(115.32647204399109, 42.26262283325195)(137.4026689529419, 44.15298843383789)(141.55605292320251, 44.449546813964844)(157.23426604270935, 44.45017433166504)(169.41109800338745, 49.18971061706543)(173.9800989627838, 54.59103965759277)(183.14974403381348, 56.37138366699219)(195.88185095787048, 58.03023147583008)(241.72696590423584, 58.42730522155762)(257.3225898742676, 61.777822494506836)(285.50245690345764, 65.11113452911377)(291.63847303390503, 65.73722743988037)(376.44569206237793, 68.27448177337646)(404.0945270061493, 68.38045024871826)(410.63508892059326, 68.38840818405151)(417.5797200202942, 68.47191429138184)(431.7584578990936, 72.96094405651093)(438.4109859466553, 173.17441391944885)",
            "programs_evaluated": 176
        }
    ],
    "world": {
        "seed": 6354,
        "description": "Many trees. Small hill."
    }
}
