{
    "standard_deviation": 3.9418871413453216,
    "avg_time": 175.2194323539734,
    "experiment": {
        "number": 4,
        "description": "Partial solution: reward > best_reward.\nCycle length 8.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].\nAllow taking multiple actions after best program.\nChange (TIMES, action) to (action, TIMES).\nLast direction higher probability, other directions lower uniform probability.",
        "grammar": [
            "SEQ => ACT",
            "ACT => [A]",
            "ACT => [ACT; A]",
            "A => (Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1), TIMES)",
            "DIR => 1",
            "DIR => 2",
            "DIR => 4",
            "DIR => 8",
            "DIR => 5",
            "DIR => 9",
            "DIR => 6",
            "DIR => 10",
            "TIMES => 5",
            "TIMES => 10",
            "TIMES => 25",
            "TIMES => 50",
            "TIMES => 75",
            "TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 25)]",
            "time": 170.84832501411438,
            "best_reward_over_time": "(0.9323611259460449, 0.3605499267578125)(2.11613392829895, 0.6474380493164062)(3.1531031131744385, 1.6182403564453125)(3.527348041534424, 2.90155029296875)(4.116813898086548, 5.735206604003906)(4.921665906906128, 11.136661529541016)(5.973345994949341, 14.990299224853516)(7.381747007369995, 18.64748764038086)(9.351660013198853, 20.946208953857422)(11.114542007446289, 24.368221282958984)(12.634196043014526, 29.187179565429688)(14.577256917953491, 33.172950744628906)(16.88981008529663, 36.773921966552734)(23.92249298095703, 44.2563591003418)(69.61565709114075, 51.09989929199219)(76.7575089931488, 51.553646087646484)(87.2337999343872, 51.9533748626709)(98.291100025177, 63.662720680236816)(107.02222895622253, 65.9426646232605)(156.22351694107056, 66.18438768386841)(169.4171380996704, 169.64837539196014)",
            "programs_evaluated": 64
        },
        {
            "number": 2,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 25)]",
            "time": 176.30564999580383,
            "best_reward_over_time": "(0.3423590660095215, 0.3605499267578125)(1.3170831203460693, 0.6474380493164062)(2.2653090953826904, 1.6182403564453125)(2.6336441040039062, 2.90155029296875)(3.1813650131225586, 5.735206604003906)(3.9771790504455566, 11.136661529541016)(5.019659042358398, 14.990299224853516)(6.36577296257019, 18.64748764038086)(8.361600160598755, 20.946208953857422)(10.056354999542236, 24.368221282958984)(11.793514966964722, 29.187179565429688)(13.73173713684082, 33.172950744628906)(16.1002299785614, 36.773921966552734)(23.313618183135986, 44.2563591003418)(71.12356519699097, 51.09989929199219)(78.68481206893921, 51.553646087646484)(89.7049331665039, 51.9533748626709)(100.92708206176758, 63.662720680236816)(110.27696418762207, 65.9426646232605)(163.40099906921387, 66.18438768386841)(176.30556106567383, 169.64837539196014)",
            "programs_evaluated": 64
        },
        {
            "number": 3,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 25)]",
            "time": 178.50432205200195,
            "best_reward_over_time": "(0.29987215995788574, 0.3605499267578125)(1.2468531131744385, 0.6474380493164062)(2.2074191570281982, 1.6182403564453125)(2.6184051036834717, 2.90155029296875)(3.18061900138855, 5.735206604003906)(3.9512181282043457, 11.136661529541016)(4.968468189239502, 14.990299224853516)(6.3018670082092285, 18.64748764038086)(8.277820110321045, 20.946208953857422)(9.95092511177063, 24.368221282958984)(11.687978982925415, 29.187179565429688)(13.606223106384277, 33.172950744628906)(15.977140188217163, 36.773921966552734)(23.270336151123047, 44.2563591003418)(71.81330609321594, 51.09989929199219)(79.71269607543945, 51.553646087646484)(90.60968112945557, 51.9533748626709)(102.23862910270691, 63.662720680236816)(111.45750999450684, 65.9426646232605)(164.89856719970703, 66.18438768386841)(178.50423908233643, 169.64837539196014)",
            "programs_evaluated": 64
        }
    ],
    "world": {
        "seed": 11248956,
        "description": "Big cave forward. Reward increases when entering cave. Goal not in cave."
    }
}
