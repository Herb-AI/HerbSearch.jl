{
    "avg_time": 499.7377460002899,
    "experiment": {
        "number": 4,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 8.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACTS].\nAllow taking multiple actions after best program.\nChange (TIMES, action) to (action, TIMES).\nLast direction has cost 1, other directions cost 10.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1), TIMES)",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x0a), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06), 10)]",
            "time": 491.7203619480133,
            "best_reward_over_time": "(0.9228320121765137, 0.3605499267578125)(2.0470950603485107, 0.6474380493164062)(3.0396370887756348, 1.431549072265625)(3.2713429927825928, 1.6182403564453125)(3.623939037322998, 2.2408370971679688)(3.9779269695281982, 2.90155029296875)(4.550692081451416, 4.113426208496094)(5.1118268966674805, 5.735206604003906)(5.839798927307129, 6.230873107910156)(6.607029914855957, 11.136661529541016)(8.054050922393799, 14.070053100585938)(9.365938901901245, 18.64748764038086)(16.04130506515503, 21.432876586914062)(17.61324906349182, 29.187179565429688)(26.92244291305542, 30.158588409423828)(28.889556884765625, 36.773921966552734)(43.53204298019409, 41.30989646911621)(48.19657802581787, 44.04032516479492)(68.84721398353577, 44.18387031555176)(71.11645197868347, 44.44530487060547)(86.67503309249878, 44.57493782043457)(94.15492701530457, 47.67057418823242)(99.88875389099121, 47.776458740234375)(109.16527509689331, 47.96977615356445)(111.99638104438782, 47.99120903015137)(117.86334300041199, 56.222023010253906)(121.19618201255798, 56.670104026794434)(124.74988603591919, 63.86649227142334)(144.52507400512695, 66.1178035736084)(206.9071009159088, 66.31331539154053)(224.5104489326477, 67.02475452423096)(357.1209499835968, 67.55945229530334)(378.8449590206146, 67.76851844787598)(388.05596590042114, 68.46228384971619)(430.0157639980316, 68.54494500160217)(434.6643691062927, 68.78230595588684)(472.0073230266571, 68.8641448020935)",
            "programs_evaluated": 151
        },
        {
            "number": 2,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x0a), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06), 10)]",
            "time": 503.9262270927429,
            "best_reward_over_time": "(0.31268906593322754, 0.3605499267578125)(1.2209069728851318, 0.6474380493164062)(2.126189947128296, 1.431549072265625)(2.3317980766296387, 1.6182403564453125)(2.65676212310791, 2.2408370971679688)(3.0032761096954346, 2.90155029296875)(3.532694101333618, 4.113426208496094)(4.080029010772705, 5.735206604003906)(4.700878143310547, 6.230873107910156)(5.444586992263794, 11.136661529541016)(6.8261120319366455, 14.070053100585938)(8.110120058059692, 18.64748764038086)(14.811944961547852, 21.432876586914062)(16.47902798652649, 29.187179565429688)(26.119696140289307, 30.158588409423828)(28.16850996017456, 36.773921966552734)(43.23177695274353, 41.30989646911621)(48.19730806350708, 44.04032516479492)(69.0370740890503, 44.18387031555176)(71.27069807052612, 44.44530487060547)(87.98744416236877, 44.57493782043457)(96.07510495185852, 47.67057418823242)(102.05783700942993, 47.776458740234375)(111.00046801567078, 47.96977615356445)(113.96550107002258, 47.99120903015137)(120.09417510032654, 56.222023010253906)(123.58635997772217, 56.670104026794434)(127.33775615692139, 63.86649227142334)(148.01973509788513, 66.1178035736084)(212.1753489971161, 66.31331539154053)(230.99140214920044, 67.02475452423096)(367.18853306770325, 67.55945229530334)(389.4815239906311, 67.76851844787598)(398.7452230453491, 68.46228384971619)(442.1718089580536, 68.54494500160217)(446.95531702041626, 68.78230595588684)(485.0130081176758, 68.8641448020935)",
            "programs_evaluated": 151
        },
        {
            "number": 3,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x0a), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06), 10)]",
            "time": 503.5666489601135,
            "best_reward_over_time": "(0.28238415718078613, 0.3605499267578125)(1.159862995147705, 0.6474380493164062)(2.003117084503174, 1.431549072265625)(2.2392890453338623, 1.6182403564453125)(2.602569103240967, 2.2408370971679688)(2.962027072906494, 2.90155029296875)(3.495687961578369, 4.113426208496094)(4.0487589836120605, 5.735206604003906)(4.746629953384399, 6.230873107910156)(5.4971959590911865, 11.136661529541016)(6.848480939865112, 14.070053100585938)(8.080374002456665, 18.64748764038086)(14.606452941894531, 21.432876586914062)(16.19874405860901, 29.187179565429688)(26.047104120254517, 30.158588409423828)(28.2583429813385, 36.773921966552734)(43.07451510429382, 41.30989646911621)(48.03852915763855, 44.04032516479492)(69.35400915145874, 44.18387031555176)(71.70543813705444, 44.44530487060547)(87.3319320678711, 44.57493782043457)(95.14536499977112, 47.67057418823242)(101.20730400085449, 47.776458740234375)(110.30645608901978, 47.96977615356445)(113.19729900360107, 47.99120903015137)(119.33059406280518, 56.222023010253906)(122.74695801734924, 56.670104026794434)(126.1414041519165, 63.86649227142334)(146.44430804252625, 66.1178035736084)(210.2290711402893, 66.31331539154053)(228.9255349636078, 67.02475452423096)(361.824205160141, 67.55945229530334)(385.8047089576721, 67.76851844787598)(396.0638771057129, 68.46228384971619)(440.7847321033478, 68.54494500160217)(445.2888431549072, 68.78230595588684)(484.52269315719604, 68.8641448020935)",
            "programs_evaluated": 151
        }
    ],
    "world": {
        "seed": 11248956,
        "description": "Big cave forward. Reward increases when entering cave. Goal not in cave."
    }
}
