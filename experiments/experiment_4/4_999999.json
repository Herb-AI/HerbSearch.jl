{
    "avg_time": 375.1810920238495,
    "experiment": {
        "number": 4,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 8.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACTS].\nAllow taking multiple actions after best program.\nChange (TIMES, action) to (action, TIMES).\nLast direction has cost 1, other directions cost 10.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1), TIMES)",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 25)]",
            "time": 371.5772259235382,
            "best_reward_over_time": "(0.8303489685058594, 0.72052001953125)(2.003854990005493, 0.8012619018554688)(2.6565959453582764, 1.7621688842773438)(2.923772096633911, 3.1292762756347656)(3.332970142364502, 7.0118408203125)(3.9313559532165527, 13.626155853271484)(4.762261152267456, 19.619747161865234)(5.767459154129028, 24.55413818359375)(7.804248094558716, 29.060440063476562)(14.598080158233643, 29.549209594726562)(25.27540898323059, 29.78515625)(46.77357316017151, 40.90272521972656)(60.562050104141235, 56.24512577056885)(67.42488408088684, 58.8682336807251)(88.21725916862488, 59.20313262939453)(91.05916810035706, 60.95532488822937)(165.11586809158325, 62.4998676776886)(305.0026261806488, 62.961861968040466)(307.83083510398865, 63.32832670211792)(370.1410241127014, 162.95263385772705)",
            "programs_evaluated": 151
        },
        {
            "number": 2,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 25)]",
            "time": 376.96834206581116,
            "best_reward_over_time": "(0.25684618949890137, 0.72052001953125)(1.1364312171936035, 0.8012619018554688)(1.6510260105133057, 1.7621688842773438)(1.9143860340118408, 3.1292762756347656)(2.2951221466064453, 7.0118408203125)(2.8519811630249023, 13.626155853271484)(3.622758150100708, 19.619747161865234)(4.509461164474487, 24.55413818359375)(6.337479114532471, 29.060440063476562)(12.863908052444458, 29.549209594726562)(22.927337169647217, 29.78515625)(45.154784202575684, 40.90272521972656)(58.81604814529419, 56.24512577056885)(65.47749519348145, 58.8682336807251)(85.9754991531372, 59.20313262939453)(88.80122017860413, 60.95532488822937)(165.58294820785522, 62.4998676776886)(309.40732502937317, 62.961861968040466)(312.46525621414185, 63.32832670211792)(376.96829104423523, 162.95263385772705)",
            "programs_evaluated": 151
        },
        {
            "number": 3,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 25)]",
            "time": 376.9977080821991,
            "best_reward_over_time": "(0.23954081535339355, 0.72052001953125)(1.1026849746704102, 0.8012619018554688)(1.5894768238067627, 1.7621688842773438)(1.8274939060211182, 3.1292762756347656)(2.1998698711395264, 7.0118408203125)(2.7546489238739014, 13.626155853271484)(3.5279300212860107, 19.619747161865234)(4.513911962509155, 24.55413818359375)(6.434440851211548, 29.060440063476562)(12.873167991638184, 29.549209594726562)(23.24667191505432, 29.78515625)(45.18817496299744, 40.90272521972656)(59.27626991271973, 56.24512577056885)(65.87758588790894, 58.8682336807251)(87.13657283782959, 59.20313262939453)(90.00288701057434, 60.95532488822937)(164.32501101493835, 62.4998676776886)(309.52289390563965, 62.961861968040466)(312.4718680381775, 63.32832670211792)(376.9976499080658, 162.95263385772705)",
            "programs_evaluated": 151
        }
    ],
    "world": {
        "seed": 999999,
        "description": "Desert. No obstacles."
    }
}
