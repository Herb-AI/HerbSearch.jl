{
    "avg_time": 381.1991659800212,
    "experiment": {
        "number": 4,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 8.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACTS].\nAllow taking multiple actions after best program.\nChange (TIMES, action) to (action, TIMES).\nLast direction has cost 1, other directions cost 10.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1), TIMES)",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 25)]",
            "time": 375.11427092552185,
            "best_reward_over_time": "(0.8588709831237793, 0.72052001953125)(1.9744369983673096, 0.8012619018554688)(2.589138984680176, 1.7621688842773438)(2.8551700115203857, 3.1292762756347656)(3.281243085861206, 7.0118408203125)(3.893646001815796, 13.626155853271484)(4.681107997894287, 19.619747161865234)(5.534613132476807, 24.55413818359375)(7.2986509799957275, 29.060440063476562)(13.699936151504517, 29.549209594726562)(24.290251970291138, 29.78515625)(46.14339804649353, 40.90272521972656)(60.224295139312744, 56.24512577056885)(66.83832216262817, 58.8682336807251)(87.7764630317688, 59.20313262939453)(90.4223620891571, 60.95532488822937)(162.62064218521118, 62.4998676776886)(307.25119709968567, 62.961861968040466)(310.36018800735474, 63.32832670211792)(373.67821311950684, 162.95263385772705)",
            "programs_evaluated": 151
        },
        {
            "number": 2,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 25)]",
            "time": 387.8756170272827,
            "best_reward_over_time": "(0.2317650318145752, 0.72052001953125)(1.0880610942840576, 0.8012619018554688)(1.5891211032867432, 1.7621688842773438)(1.8481271266937256, 3.1292762756347656)(2.2493700981140137, 7.0118408203125)(2.8298580646514893, 13.626155853271484)(3.622061014175415, 19.619747161865234)(4.617911100387573, 24.55413818359375)(6.639725208282471, 29.060440063476562)(12.660097122192383, 29.549209594726562)(23.518251180648804, 29.78515625)(46.75222420692444, 40.90272521972656)(60.92019605636597, 56.24512577056885)(67.29363107681274, 58.8682336807251)(87.12581706047058, 59.20313262939453)(89.95036315917969, 60.95532488822937)(169.60418605804443, 62.4998676776886)(317.25638914108276, 62.961861968040466)(320.33560609817505, 63.32832670211792)(387.87553906440735, 162.95263385772705)",
            "programs_evaluated": 151
        },
        {
            "number": 3,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 25)]",
            "time": 380.6076099872589,
            "best_reward_over_time": "(0.2154989242553711, 0.72052001953125)(1.0776300430297852, 0.8012619018554688)(1.5842268466949463, 1.7621688842773438)(1.8313179016113281, 3.1292762756347656)(2.1834609508514404, 7.0118408203125)(2.721047878265381, 13.626155853271484)(3.4703850746154785, 19.619747161865234)(4.410470008850098, 24.55413818359375)(6.343719959259033, 29.060440063476562)(12.813848972320557, 29.549209594726562)(22.858803033828735, 29.78515625)(44.97499895095825, 40.90272521972656)(59.07502102851868, 56.24512577056885)(66.09666895866394, 58.8682336807251)(86.61643195152283, 59.20313262939453)(89.6031060218811, 60.95532488822937)(164.70562100410461, 62.4998676776886)(311.75884890556335, 62.961861968040466)(314.7112798690796, 63.32832670211792)(380.6075439453125, 162.95263385772705)",
            "programs_evaluated": 151
        }
    ],
    "world": {
        "seed": 999999,
        "description": "Desert. No obstacles."
    }
}
