{
    "standard_deviation": 17.380461456970647,
    "avg_time": 60.55886737505595,
    "experiment": {
        "number": 6,
        "description": "Partial solution: reward > best_reward.\nCycle length 8.\nSelect 5 programs with highest reward.\nStart with random probablities; ranadomise probabilites when updating; replace start symbol with [best_program; ACT].\nAllow taking multiple actions after best program.\nChange (TIMES, action) to (action, TIMES).",
        "grammar": [
            "SEQ => ACT",
            "ACT => [A]",
            "ACT => [ACT; A]",
            "A => (Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1), TIMES)",
            "DIR => 1",
            "DIR => 2",
            "DIR => 4",
            "DIR => 8",
            "DIR => 5",
            "DIR => 9",
            "DIR => 6",
            "DIR => 10",
            "TIMES => 5",
            "TIMES => 10",
            "TIMES => 25",
            "TIMES => 50",
            "TIMES => 75",
            "TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10)]",
            "time": 44.81769394874573,
            "best_reward_over_time": "(1.672785997390747, 18.50699234008789)(4.395981073379517, 23.234203338623047)(5.476696968078613, 23.59320831298828)(8.509574890136719, 31.46877670288086)(10.016512870788574, 34.91064262390137)(13.835638999938965, 55.43257236480713)(18.786195993423462, 62.79374313354492)(43.4315710067749, 163.40253269672394)",
            "programs_evaluated": 26
        },
        {
            "number": 2,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75)]",
            "time": 57.64789414405823,
            "best_reward_over_time": "(0.2457292079925537, 0.08538055419921875)(0.6281740665435791, 0.4779815673828125)(1.4248950481414795, 3.8580284118652344)(2.7713730335235596, 5.733463287353516)(4.452637195587158, 7.5197601318359375)(6.403828144073486, 11.88568115234375)(10.665824174880981, 27.484619140625)(13.354600191116333, 29.674251556396484)(16.456011056900024, 34.53788948059082)(20.497019052505493, 36.53622627258301)(42.76806998252869, 42.603105545043945)(52.25484013557434, 43.94383430480957)(57.64781999588013, 163.16186666488647)",
            "programs_evaluated": 37
        },
        {
            "number": 3,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08), 100)]",
            "time": 79.21101403236389,
            "best_reward_over_time": "(0.2487940788269043, 0.8965263366699219)(0.4397151470184326, 1.9795036315917969)(0.9585449695587158, 4.740325927734375)(1.485414981842041, 14.949043273925781)(2.926690101623535, 23.234203338623047)(4.118016004562378, 26.31531524658203)(7.733381986618042, 26.481544494628906)(9.913383960723877, 41.113731384277344)(12.717795133590698, 41.91763687133789)(15.592367172241211, 42.064945220947266)(18.47199511528015, 42.106781005859375)(24.533873081207275, 57.906705379486084)(46.87919497489929, 59.439663887023926)(79.21095395088196, 163.14597427845)",
            "programs_evaluated": 45
        }
    ],
    "world": {
        "seed": 999999,
        "description": "Desert. No obstacles."
    }
}
