{
    "avg_time": 141.60817337036133,
    "experiment": {
        "number": 1,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].",
        "grammar": [
            "4 : SEQ => [ACT]",
            "4 : ACT => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 141.59989619255066,
            "best_reward_over_time": "(0.9194118976593018, 0.7175369262695312)(1.2812628746032715, 1.7037277221679688)(1.7296240329742432, 5.500297546386719)(2.4074349403381348, 10.980079650878906)(3.186429023742676, 11.833969116210938)(5.864089012145996, 11.841365814208984)(7.180109024047852, 11.841842651367188)(10.953811883926392, 16.6622314453125)(16.372602939605713, 22.58184051513672)(26.08672308921814, 24.621551513671875)(31.779207944869995, 28.982643127441406)(38.027875900268555, 38.372806549072266)(42.861083984375, 43.77778625488281)(52.569437980651855, 51.47108840942383)(55.395768880844116, 58.66009712219238)(69.34015202522278, 66.05659103393555)(75.63452887535095, 68.28876686096191)(92.80644989013672, 69.81911373138428)(99.75319004058838, 71.98510789871216)(140.12289190292358, 174.32029938697815)",
            "programs_evaluated": 60
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 141.28602600097656,
            "best_reward_over_time": "(0.26715803146362305, 0.7175369262695312)(0.48375916481018066, 1.7037277221679688)(0.8655900955200195, 5.500297546386719)(1.5024361610412598, 10.980079650878906)(2.1851069927215576, 11.833969116210938)(4.627233982086182, 11.841365814208984)(6.042251110076904, 11.841842651367188)(9.806097030639648, 16.6622314453125)(15.140164136886597, 22.58184051513672)(25.048141956329346, 24.621551513671875)(30.55205202102661, 28.982643127441406)(36.397255182266235, 38.372806549072266)(41.26589918136597, 43.77778625488281)(51.21529197692871, 51.47108840942383)(54.17133712768555, 58.66009712219238)(68.98539113998413, 66.05659103393555)(75.85327005386353, 68.28876686096191)(92.31567716598511, 69.81911373138428)(99.35139799118042, 71.98510789871216)(141.2859489917755, 174.32029938697815)",
            "programs_evaluated": 60
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 141.93859791755676,
            "best_reward_over_time": "(0.238447904586792, 0.7175369262695312)(0.44679808616638184, 1.7037277221679688)(0.7913739681243896, 5.500297546386719)(1.3757319450378418, 10.980079650878906)(2.067111015319824, 11.833969116210938)(4.430995941162109, 11.841365814208984)(5.779618978500366, 11.841842651367188)(9.521743059158325, 16.6622314453125)(15.110097885131836, 22.58184051513672)(25.08031988143921, 24.621551513671875)(30.969428062438965, 28.982643127441406)(37.41224503517151, 38.372806549072266)(42.14261507987976, 43.77778625488281)(52.1292998790741, 51.47108840942383)(55.165236949920654, 58.66009712219238)(70.14083409309387, 66.05659103393555)(76.66686987876892, 68.28876686096191)(93.04937601089478, 69.81911373138428)(100.1664559841156, 71.98510789871216)(141.9385290145874, 174.32029938697815)",
            "programs_evaluated": 60
        }
    ],
    "world": {
        "seed": 958129,
        "description": "Relatively flat. Some trees. Cave opening."
    }
}
