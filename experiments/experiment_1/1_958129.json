{
    "avg_time": 140.68155026435852,
    "experiment": {
        "number": 1,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].",
        "grammar": [
            "4 : SEQ => [ACT]",
            "4 : ACT => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 141.75873398780823,
            "best_reward_over_time": "(0.8669230937957764, 0.7175369262695312)(1.2429211139678955, 1.7037277221679688)(1.7152960300445557, 5.500297546386719)(2.460211992263794, 10.980079650878906)(3.1931722164154053, 11.833969116210938)(5.838317155838013, 11.841365814208984)(7.287258148193359, 11.841842651367188)(11.273240089416504, 16.6622314453125)(16.910892009735107, 22.58184051513672)(27.00934600830078, 24.621551513671875)(32.61385107040405, 28.982643127441406)(38.79790115356445, 38.372806549072266)(43.32986521720886, 43.77778625488281)(52.980934143066406, 51.47108840942383)(55.818857192993164, 58.66009712219238)(70.04390215873718, 66.05659103393555)(76.57506704330444, 68.28876686096191)(93.80850505828857, 69.81911373138428)(100.61931300163269, 71.98510789871216)(140.25654411315918, 174.32029938697815)",
            "programs_evaluated": 60
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 140.21650195121765,
            "best_reward_over_time": "(0.2831230163574219, 0.7175369262695312)(0.5097699165344238, 1.7037277221679688)(0.8508639335632324, 5.500297546386719)(1.4813249111175537, 10.980079650878906)(2.2027530670166016, 11.833969116210938)(4.728085994720459, 11.841365814208984)(6.184475898742676, 11.841842651367188)(9.91412901878357, 16.6622314453125)(15.276364088058472, 22.58184051513672)(25.049516916275024, 24.621551513671875)(30.68536400794983, 28.982643127441406)(37.046653032302856, 38.372806549072266)(41.80088496208191, 43.77778625488281)(51.5877799987793, 51.47108840942383)(54.350346088409424, 58.66009712219238)(68.44702100753784, 66.05659103393555)(74.82188391685486, 68.28876686096191)(92.08654689788818, 69.81911373138428)(99.30636596679688, 71.98510789871216)(140.21641206741333, 174.32029938697815)",
            "programs_evaluated": 60
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 140.06941485404968,
            "best_reward_over_time": "(0.24801182746887207, 0.7175369262695312)(0.4616990089416504, 1.7037277221679688)(0.8275220394134521, 5.500297546386719)(1.4151618480682373, 10.980079650878906)(2.094803810119629, 11.833969116210938)(4.422240972518921, 11.841365814208984)(5.798105955123901, 11.841842651367188)(9.530879020690918, 16.6622314453125)(15.049072980880737, 22.58184051513672)(24.19581699371338, 24.621551513671875)(29.874379873275757, 28.982643127441406)(36.269546031951904, 38.372806549072266)(40.955376863479614, 43.77778625488281)(50.785071849823, 51.47108840942383)(53.519529819488525, 58.66009712219238)(67.6108009815216, 66.05659103393555)(74.34430599212646, 68.28876686096191)(91.76073884963989, 69.81911373138428)(98.58758783340454, 71.98510789871216)(140.06933188438416, 174.32029938697815)",
            "programs_evaluated": 60
        }
    ],
    "world": {
        "seed": 958129,
        "description": "Relatively flat. Some trees. Cave opening."
    }
}
