{
    "avg_time": 138.79185032844543,
    "experiment": {
        "number": 1,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].",
        "grammar": [
            "4 : SEQ => [ACT]",
            "4 : ACT => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 139.81603908538818,
            "best_reward_over_time": "(0.8710448741912842, 0.7175369262695312)(1.2347290515899658, 1.7037277221679688)(1.6848819255828857, 5.500297546386719)(2.3501670360565186, 10.980079650878906)(3.069118022918701, 11.833969116210938)(5.785338878631592, 11.841365814208984)(7.204192876815796, 11.841842651367188)(11.082010984420776, 16.6622314453125)(16.33207893371582, 22.58184051513672)(26.011900901794434, 24.621551513671875)(31.598610877990723, 28.982643127441406)(37.5592839717865, 38.372806549072266)(42.29381203651428, 43.77778625488281)(51.716856956481934, 51.47108840942383)(54.56412696838379, 58.66009712219238)(67.96455597877502, 66.05659103393555)(74.4854679107666, 68.28876686096191)(91.65266585350037, 69.81911373138428)(98.52549505233765, 71.98510789871216)(138.35397386550903, 174.32029938697815)",
            "programs_evaluated": 60
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 138.55475091934204,
            "best_reward_over_time": "(0.27269506454467773, 0.7175369262695312)(0.4954671859741211, 1.7037277221679688)(0.8887660503387451, 5.500297546386719)(1.4942800998687744, 10.980079650878906)(2.108713150024414, 11.833969116210938)(4.429408073425293, 11.841365814208984)(5.820788145065308, 11.841842651367188)(9.54093313217163, 16.6622314453125)(15.046868085861206, 22.58184051513672)(24.199408054351807, 24.621551513671875)(30.07676601409912, 28.982643127441406)(35.90223002433777, 38.372806549072266)(40.38250207901001, 43.77778625488281)(50.107949018478394, 51.47108840942383)(52.91687202453613, 58.66009712219238)(67.27314901351929, 66.05659103393555)(73.37349915504456, 68.28876686096191)(90.46473217010498, 69.81911373138428)(97.70491313934326, 71.98510789871216)(138.55462312698364, 174.32029938697815)",
            "programs_evaluated": 60
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 138.00476098060608,
            "best_reward_over_time": "(0.26466917991638184, 0.7175369262695312)(0.48731207847595215, 1.7037277221679688)(0.8420190811157227, 5.500297546386719)(1.4265031814575195, 10.980079650878906)(2.1295361518859863, 11.833969116210938)(4.244091033935547, 11.841365814208984)(5.604748964309692, 11.841842651367188)(9.236806154251099, 16.6622314453125)(14.460487127304077, 22.58184051513672)(23.883620977401733, 24.621551513671875)(29.66210699081421, 28.982643127441406)(35.8488609790802, 38.372806549072266)(40.69564700126648, 43.77778625488281)(50.544569969177246, 51.47108840942383)(53.40696096420288, 58.66009712219238)(68.0149610042572, 66.05659103393555)(74.42702913284302, 68.28876686096191)(91.39829015731812, 69.81911373138428)(98.38395714759827, 71.98510789871216)(138.0046510696411, 174.32029938697815)",
            "programs_evaluated": 60
        }
    ],
    "world": {
        "seed": 958129,
        "description": "Relatively flat. Some trees. Cave opening."
    }
}
