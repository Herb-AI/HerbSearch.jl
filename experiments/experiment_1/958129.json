{
    "avg_time": 145.18144702911377,
    "experiment": {
        "number": 1,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].",
        "grammar": [
            "4 : SEQ => [ACT]",
            "4 : ACT => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 145.2042739391327,
            "best_reward_over_time": "(0.5891730785369873, 0.7175369262695312)(0.8610000610351562, 1.7037277221679688)(1.271122932434082, 5.500297546386719)(1.9174890518188477, 10.980567932128906)(2.7508859634399414, 11.833969116210938)(5.233252048492432, 11.841365814208984)(6.6805100440979, 11.841842651367188)(10.70583200454712, 16.6622314453125)(16.468496084213257, 22.58184051513672)(26.629019021987915, 24.621551513671875)(32.48597812652588, 28.982643127441406)(38.93905997276306, 38.372806549072266)(43.63601803779602, 43.77778625488281)(53.248619079589844, 51.47108840942383)(56.11879801750183, 58.66009712219238)(70.54866695404053, 66.05659103393555)(77.26448702812195, 68.28876686096191)(95.59277200698853, 69.81911373138428)(102.75265097618103, 71.98510789871216)(143.68985795974731, 174.32029938697815)",
            "programs_evaluated": 60
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 145.93416905403137,
            "best_reward_over_time": "(0.11919403076171875, 0.7175369262695312)(0.2862849235534668, 1.7037277221679688)(0.5676608085632324, 5.500297546386719)(1.148324966430664, 10.980567932128906)(1.9144608974456787, 11.833969116210938)(4.160008907318115, 11.841365814208984)(5.448819875717163, 11.841842651367188)(9.087157964706421, 16.6622314453125)(14.727761030197144, 22.58184051513672)(24.988886833190918, 24.621551513671875)(31.101048946380615, 28.982643127441406)(37.51746082305908, 38.372806549072266)(42.42597198486328, 43.77778625488281)(52.895025968551636, 51.47108840942383)(55.90047597885132, 58.66009712219238)(70.39540600776672, 66.05659103393555)(77.2160279750824, 68.28876686096191)(95.33919286727905, 69.81911373138428)(102.8805799484253, 71.98510789871216)(145.9340569972992, 174.32029938697815)",
            "programs_evaluated": 60
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (25, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02))]",
            "time": 144.40589809417725,
            "best_reward_over_time": "(0.09815096855163574, 0.7175369262695312)(0.22220087051391602, 1.7037277221679688)(0.4682338237762451, 5.500297546386719)(0.9445090293884277, 10.980567932128906)(1.5958359241485596, 11.833969116210938)(3.558626890182495, 11.841365814208984)(4.7761688232421875, 11.841842651367188)(8.582801818847656, 16.6622314453125)(13.996481895446777, 22.58184051513672)(24.185802936553955, 24.621551513671875)(30.204762935638428, 28.982643127441406)(36.743271827697754, 38.372806549072266)(41.50532793998718, 43.77778625488281)(51.68943691253662, 51.47108840942383)(54.66593384742737, 58.66009712219238)(69.5641508102417, 66.05659103393555)(76.64934086799622, 68.28876686096191)(94.3818929195404, 69.81911373138428)(101.5852439403534, 71.98510789871216)(144.40580296516418, 174.32029938697815)",
            "programs_evaluated": 60
        }
    ],
    "world": {
        "seed": 958129,
        "description": "Relatively flat. Some trees. Cave opening."
    }
}
