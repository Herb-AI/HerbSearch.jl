{
    "avg_time": 85.6834716796875,
    "experiment": {
        "number": 3,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 8.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].\nAllow taking multiple actions after best program.\nChange (TIMES, action) to (action, TIMES)",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1), TIMES)",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10)]",
            "time": 87.03417110443115,
            "best_reward_over_time": "(0.8462378978729248, 0.72052001953125)(2.039728879928589, 0.8012619018554688)(2.6492629051208496, 1.92767333984375)(3.5760178565979004, 1.9795036315917969)(4.193789005279541, 3.46954345703125)(5.489820957183838, 3.540882110595703)(6.237823963165283, 4.937953948974609)(7.527082920074463, 4.989902496337891)(8.59965181350708, 6.602993011474609)(10.36034083366394, 6.697601318359375)(11.429488897323608, 8.059127807617188)(11.782841920852661, 8.111034393310547)(12.193107843399048, 9.570293426513672)(12.585925817489624, 9.739105224609375)(13.164417028427124, 13.963760375976562)(13.703099966049194, 14.949043273925781)(14.443842887878418, 20.63650894165039)(15.184717893600464, 23.234203338623047)(16.267529010772705, 36.386390686035156)(17.243197917938232, 40.17662811279297)(23.79879593849182, 51.60211181640625)(25.32608985900879, 55.43257236480713)(35.61435794830322, 57.40972375869751)(40.13816785812378, 58.50054121017456)(41.66006803512573, 58.61255884170532)(43.3054678440094, 61.338504791259766)(44.98712086677551, 62.79374313354492)",
            "programs_evaluated": 92
        },
        {
            "number": 2,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10)]",
            "time": 85.50069093704224,
            "best_reward_over_time": "(0.22280311584472656, 0.72052001953125)(1.0801210403442383, 0.8012619018554688)(1.567540168762207, 1.92767333984375)(2.432077169418335, 1.9795036315917969)(3.046053171157837, 3.46954345703125)(4.336053133010864, 3.540882110595703)(5.033869028091431, 4.937953948974609)(6.343387126922607, 4.989902496337891)(7.341371059417725, 6.602993011474609)(9.03095006942749, 6.697601318359375)(10.092028141021729, 8.059127807617188)(10.491554021835327, 8.111034393310547)(10.868026971817017, 9.570293426513672)(11.221532106399536, 9.739105224609375)(11.764970064163208, 13.963760375976562)(12.352524995803833, 14.949043273925781)(13.1526460647583, 20.63650894165039)(13.933523178100586, 23.234203338623047)(15.154497146606445, 36.386390686035156)(16.171738147735596, 40.17662811279297)(22.889090061187744, 51.60211181640625)(24.426436185836792, 55.43257236480713)(34.683430194854736, 57.40972375869751)(39.41420912742615, 58.50054121017456)(41.03678917884827, 58.61255884170532)(42.819360971450806, 61.338504791259766)(44.593839168548584, 62.79374313354492)",
            "programs_evaluated": 92
        },
        {
            "number": 3,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 50), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04), 10)]",
            "time": 84.51555299758911,
            "best_reward_over_time": "(0.22946500778198242, 0.72052001953125)(1.1350810527801514, 0.8012619018554688)(1.6416568756103516, 1.92767333984375)(2.5523600578308105, 1.9795036315917969)(3.1487648487091064, 3.46954345703125)(4.386887073516846, 3.540882110595703)(4.998875856399536, 4.937953948974609)(6.048424959182739, 4.989902496337891)(6.997636079788208, 6.602993011474609)(8.753980875015259, 6.697601318359375)(9.825721979141235, 8.059127807617188)(10.225197076797485, 8.111034393310547)(10.629732847213745, 9.570293426513672)(11.034157037734985, 9.739105224609375)(11.607486009597778, 13.963760375976562)(12.140732049942017, 14.949043273925781)(12.856093883514404, 20.63650894165039)(13.56220293045044, 23.234203338623047)(14.678624868392944, 36.386390686035156)(15.81598687171936, 40.17662811279297)(22.288702964782715, 51.60211181640625)(23.849958896636963, 55.43257236480713)(34.73940896987915, 57.40972375869751)(39.442888021469116, 58.50054121017456)(40.92470598220825, 58.61255884170532)(42.72582697868347, 61.338504791259766)(44.55638098716736, 62.79374313354492)",
            "programs_evaluated": 92
        }
    ],
    "world": {
        "seed": 999999,
        "description": "Desert. No obstacles."
    }
}
