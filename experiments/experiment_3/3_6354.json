{
    "avg_time": 335.12048864364624,
    "experiment": {
        "number": 3,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 8.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].\nAllow taking multiple actions after best program.\nChange (TIMES, action) to (action, TIMES)",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1), TIMES)",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75)]",
            "time": 327.0040328502655,
            "best_reward_over_time": "(0.6645328998565674, 0.7725448608398438)(1.808142900466919, 0.7818145751953125)(2.6006648540496826, 0.9250946044921875)(12.100173950195312, 1.1490249633789062)(13.39925479888916, 1.6162033081054688)(14.314175844192505, 1.6519775390625)(15.280754804611206, 1.7381973266601562)(17.045010805130005, 2.643310546875)(17.99622893333435, 2.6747207641601562)(18.973374843597412, 2.785491943359375)(21.044732809066772, 3.8701934814453125)(23.28645396232605, 4.127098083496094)(25.53979802131653, 5.407142639160156)(26.839687824249268, 5.446563720703125)(28.10349988937378, 5.55316162109375)(30.713255882263184, 6.8909454345703125)(31.442160844802856, 7.109153747558594)(32.150816917419434, 7.888236999511719)(32.88359880447388, 8.5430908203125)(33.66501188278198, 9.213119506835938)(34.6763060092926, 12.03873062133789)(36.763526916503906, 16.34018325805664)(39.05827283859253, 22.476268768310547)(41.0018470287323, 36.96156692504883)(52.38756084442139, 43.133975982666016)(55.591059923172, 50.458030700683594)(59.213313817977905, 52.45028305053711)(77.8140549659729, 56.76670455932617)(81.18247985839844, 57.40292739868164)(115.13052701950073, 57.46800994873047)(179.80990481376648, 60.99609851837158)(184.41397380828857, 63.33263397216797)(197.8231840133667, 67.95742607116699)(222.38665294647217, 71.27092361450195)(227.38590288162231, 72.5509045124054)(325.59699392318726, 173.2271695137024)",
            "programs_evaluated": 156
        },
        {
            "number": 2,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75)]",
            "time": 341.8250398635864,
            "best_reward_over_time": "(0.1574559211730957, 0.7725448608398438)(1.0049538612365723, 0.7818145751953125)(1.709533929824829, 0.9250946044921875)(10.636566877365112, 1.1490249633789062)(12.01865291595459, 1.6162033081054688)(12.933873891830444, 1.6519775390625)(13.88848090171814, 1.7381973266601562)(15.795555830001831, 2.643310546875)(16.773736000061035, 2.6747207641601562)(17.65879201889038, 2.785491943359375)(19.48436188697815, 3.8701934814453125)(21.85587787628174, 4.127098083496094)(24.333741903305054, 5.407142639160156)(25.668362855911255, 5.446563720703125)(26.826550006866455, 5.55316162109375)(29.416815996170044, 6.8909454345703125)(30.12262988090515, 7.109153747558594)(30.84584879875183, 7.888236999511719)(31.552770853042603, 8.5430908203125)(32.36462688446045, 9.213119506835938)(33.4302978515625, 12.03873062133789)(35.68532395362854, 16.34018325805664)(38.020105838775635, 22.476268768310547)(40.1259388923645, 36.96156692504883)(52.37610483169556, 43.133975982666016)(55.89237880706787, 50.458030700683594)(59.43530488014221, 52.45028305053711)(78.19899392127991, 56.76670455932617)(82.45862698554993, 57.40292739868164)(119.2469048500061, 57.46800994873047)(185.71618580818176, 60.99609851837158)(190.1019868850708, 63.33263397216797)(203.6815938949585, 67.95742607116699)(229.91203594207764, 71.27092361450195)(235.45832586288452, 72.5509045124054)(341.8249568939209, 173.2271695137024)",
            "programs_evaluated": 156
        },
        {
            "number": 3,
            "program": "Tuple{Dict{String, Integer}, Int64}[(Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09), 25), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 100), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05), 5), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06), 75), (Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01), 75)]",
            "time": 336.5323932170868,
            "best_reward_over_time": "(0.1476130485534668, 0.7725448608398438)(0.9677200317382812, 0.7818145751953125)(1.6814110279083252, 0.9250946044921875)(10.662118911743164, 1.1490249633789062)(11.842967987060547, 1.6162033081054688)(12.757075071334839, 1.6519775390625)(13.748430013656616, 1.7381973266601562)(15.666862964630127, 2.643310546875)(16.630300998687744, 2.6747207641601562)(17.635525941848755, 2.785491943359375)(19.42976689338684, 3.8701934814453125)(21.4879469871521, 4.127098083496094)(23.747798919677734, 5.407142639160156)(25.057081937789917, 5.446563720703125)(26.340229034423828, 5.55316162109375)(28.998283863067627, 6.8909454345703125)(29.719109058380127, 7.109153747558594)(30.382186889648438, 7.888236999511719)(31.06523895263672, 8.5430908203125)(31.793227910995483, 9.213119506835938)(32.70276188850403, 12.03873062133789)(34.71285390853882, 16.34018325805664)(37.28784489631653, 22.476268768310547)(39.37542700767517, 36.96156692504883)(52.0251190662384, 43.133975982666016)(55.63594698905945, 50.458030700683594)(59.031272888183594, 52.45028305053711)(78.35272789001465, 56.76670455932617)(82.38900303840637, 57.40292739868164)(116.52894306182861, 57.46800994873047)(183.23574304580688, 60.99609851837158)(187.72093605995178, 63.33263397216797)(202.18774700164795, 67.95742607116699)(227.85724306106567, 71.27092361450195)(232.97711396217346, 72.5509045124054)(336.5323369503021, 173.2271695137024)",
            "programs_evaluated": 156
        }
    ],
    "world": {
        "seed": 6354,
        "description": "Many trees. Small hill."
    }
}
