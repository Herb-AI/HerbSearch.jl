{
    "standard_deviation": 1.6351941503835545,
    "avg_time": 166.17763662338257,
    "experiment": {
        "number": 2,
        "description": "Partial solution: reward > best_reward.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].\nAllow taking multiple actions after best program.",
        "grammar": [
            "SEQ => ACT",
            "ACT => [A]",
            "ACT => [ACT; A]",
            "A => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "DIR => 1",
            "DIR => 2",
            "DIR => 4",
            "DIR => 8",
            "DIR => 5",
            "DIR => 9",
            "DIR => 6",
            "DIR => 10",
            "TIMES => 5",
            "TIMES => 10",
            "TIMES => 25",
            "TIMES => 50",
            "TIMES => 75",
            "TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (10, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06))]",
            "time": 164.42670488357544,
            "best_reward_over_time": "(0.8753910064697266, 0.72052001953125)(1.2098870277404785, 1.7621688842773438)(1.7280519008636475, 5.826240539550781)(2.4457650184631348, 12.413169860839844)(3.3029589653015137, 18.50699234008789)(4.3815529346466064, 23.59320831298828)(5.662252902984619, 25.328472137451172)(6.9271790981292725, 27.256317138671875)(8.401031017303467, 29.281509399414062)(10.385807991027832, 29.442893981933594)(25.29146909713745, 29.782657623291016)(32.149723052978516, 29.82843017578125)(58.09472107887268, 37.388200759887695)(73.14350509643555, 47.84961128234863)(86.39307498931885, 56.31701850891113)(104.41608810424805, 59.97228717803955)(162.9821650981903, 163.19242072105408)",
            "programs_evaluated": 65
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (10, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06))]",
            "time": 167.66509795188904,
            "best_reward_over_time": "(0.25365304946899414, 0.72052001953125)(0.4658529758453369, 1.7621688842773438)(0.8759160041809082, 5.826240539550781)(1.4144840240478516, 12.413169860839844)(2.2543301582336426, 18.50699234008789)(3.2927310466766357, 23.59320831298828)(4.464046955108643, 25.328472137451172)(5.7259180545806885, 27.256317138671875)(7.228920936584473, 29.281509399414062)(9.05057406425476, 29.442893981933594)(24.529063940048218, 29.782657623291016)(31.388914108276367, 29.82843017578125)(58.326457023620605, 37.388200759887695)(74.07883906364441, 47.84961128234863)(87.92481398582458, 56.31701850891113)(106.75000810623169, 59.97228717803955)(167.66500210762024, 163.19242072105408)",
            "programs_evaluated": 65
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (10, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x06))]",
            "time": 166.44110703468323,
            "best_reward_over_time": "(0.2444620132446289, 0.72052001953125)(0.4433760643005371, 1.7621688842773438)(0.8157999515533447, 5.826240539550781)(1.3300249576568604, 12.413169860839844)(2.093683958053589, 18.50699234008789)(3.1110570430755615, 23.59320831298828)(4.215137004852295, 25.328472137451172)(5.449928045272827, 27.256317138671875)(6.856584072113037, 29.281509399414062)(8.685750961303711, 29.442893981933594)(23.682164907455444, 29.782657623291016)(30.827866077423096, 29.82843017578125)(56.59118390083313, 37.388200759887695)(71.22328305244446, 47.84961128234863)(85.3128399848938, 56.31701850891113)(104.70393705368042, 59.97228717803955)(166.44100999832153, 163.19242072105408)",
            "programs_evaluated": 65
        }
    ],
    "world": {
        "seed": 999999,
        "description": "Desert. No obstacles."
    }
}
