{
    "avg_time": 150.51054469744363,
    "experiment": {
        "number": 2,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACTS].\nAllow taking multiple actions after best program.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05))]",
            "time": 153.1452841758728,
            "best_reward_over_time": "(0.849729061126709, 0.72052001953125)(1.1763110160827637, 1.7621688842773438)(1.6741101741790771, 5.826240539550781)(2.318714141845703, 12.413169860839844)(3.1260759830474854, 18.50699234008789)(4.114086151123047, 23.59320831298828)(5.780791997909546, 27.472999572753906)(10.881643056869507, 39.209415435791016)(14.373014211654663, 45.76560592651367)(19.474369049072266, 56.153629302978516)(96.10417604446411, 58.902060985565186)(151.70589208602905, 163.33255100250244)",
            "programs_evaluated": 59
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05))]",
            "time": 149.63159012794495,
            "best_reward_over_time": "(0.24108290672302246, 0.72052001953125)(0.4384770393371582, 1.7621688842773438)(0.8197200298309326, 5.826240539550781)(1.357079029083252, 12.413169860839844)(2.083976984024048, 18.50699234008789)(2.961899995803833, 23.59320831298828)(4.563091993331909, 27.472999572753906)(9.605886936187744, 39.209415435791016)(13.082098007202148, 45.76560592651367)(17.930444955825806, 56.153629302978516)(93.05627107620239, 58.902060985565186)(149.63154196739197, 163.33255100250244)",
            "programs_evaluated": 59
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05))]",
            "time": 148.75475978851318,
            "best_reward_over_time": "(0.23756694793701172, 0.72052001953125)(0.4442479610443115, 1.7621688842773438)(0.8263258934020996, 5.826240539550781)(1.3398349285125732, 12.413169860839844)(2.106520891189575, 18.50699234008789)(3.0399138927459717, 23.59320831298828)(4.730379819869995, 27.472999572753906)(9.612715005874634, 39.209415435791016)(12.945071935653687, 45.76560592651367)(17.85240888595581, 56.153629302978516)(93.33776497840881, 58.902060985565186)(148.7546899318695, 163.33255100250244)",
            "programs_evaluated": 59
        }
    ],
    "world": {
        "seed": 999999,
        "description": "Desert. No obstacles."
    }
}
