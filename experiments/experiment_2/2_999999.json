{
    "avg_time": 155.27298641204834,
    "experiment": {
        "number": 2,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACT].\nAllow taking multiple actions after best program.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05))]",
            "time": 155.0599501132965,
            "best_reward_over_time": "(0.8371129035949707, 0.72052001953125)(1.1554620265960693, 1.7621688842773438)(1.6299569606781006, 5.826240539550781)(2.3264169692993164, 12.413169860839844)(3.159248113632202, 18.50699234008789)(4.147069931030273, 23.59320831298828)(6.103729009628296, 27.472999572753906)(11.735297918319702, 39.209415435791016)(15.411303043365479, 45.76560592651367)(20.339592933654785, 56.153629302978516)(96.25930190086365, 58.902060985565186)(153.6346459388733, 163.33255100250244)",
            "programs_evaluated": 59
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05))]",
            "time": 156.14579391479492,
            "best_reward_over_time": "(0.26924896240234375, 0.72052001953125)(0.48269009590148926, 1.7621688842773438)(0.8640420436859131, 5.826240539550781)(1.4319870471954346, 12.413169860839844)(2.2017900943756104, 18.50699234008789)(3.1499850749969482, 23.59320831298828)(4.917102098464966, 27.472999572753906)(10.221266031265259, 39.209415435791016)(13.761175870895386, 45.76560592651367)(18.419595956802368, 56.153629302978516)(98.78834795951843, 58.902060985565186)(156.14574003219604, 163.33255100250244)",
            "programs_evaluated": 59
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05))]",
            "time": 154.6132152080536,
            "best_reward_over_time": "(0.20908880233764648, 0.72052001953125)(0.37651586532592773, 1.7621688842773438)(0.7075638771057129, 5.826240539550781)(1.2642199993133545, 12.413169860839844)(2.046757936477661, 18.50699234008789)(3.0209009647369385, 23.59320831298828)(4.83891487121582, 27.472999572753906)(9.80940580368042, 39.209415435791016)(13.174813985824585, 45.76560592651367)(18.162282943725586, 56.153629302978516)(97.99783492088318, 58.902060985565186)(154.61315488815308, 163.33255100250244)",
            "programs_evaluated": 59
        }
    ],
    "world": {
        "seed": 999999,
        "description": "Desert. No obstacles."
    }
}
