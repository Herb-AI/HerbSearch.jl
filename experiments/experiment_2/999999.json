{
    "avg_time": 157.05744171142578,
    "experiment": {
        "number": 2,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACTS].\nAllow taking multiple actions after best program.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05))]",
            "time": 157.7391860485077,
            "best_reward_over_time": "(0.551764965057373, 0.72052001953125)(0.8290729522705078, 1.7621688842773438)(1.1814119815826416, 5.826240539550781)(1.7712619304656982, 12.413169860839844)(2.548527956008911, 18.50699234008789)(3.5294950008392334, 23.59320831298828)(5.474164009094238, 27.472999572753906)(11.01592493057251, 39.209415435791016)(14.54945707321167, 45.76560592651367)(19.69502305984497, 56.153629302978516)(98.36554789543152, 58.902060985565186)(156.28504490852356, 163.33255100250244)",
            "programs_evaluated": 59
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05))]",
            "time": 157.6335620880127,
            "best_reward_over_time": "(0.10784196853637695, 0.72052001953125)(0.26186680793762207, 1.7621688842773438)(0.5187540054321289, 5.826240539550781)(0.9775679111480713, 12.413169860839844)(1.6501619815826416, 18.50699234008789)(2.49104380607605, 23.59320831298828)(4.0742340087890625, 27.472999572753906)(9.059288024902344, 39.209415435791016)(12.56639289855957, 45.76560592651367)(17.51622486114502, 56.153629302978516)(98.53610587120056, 58.902060985565186)(157.6334879398346, 163.33255100250244)",
            "programs_evaluated": 59
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (100, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x08)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x02)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x05))]",
            "time": 155.79957699775696,
            "best_reward_over_time": "(0.09182190895080566, 0.72052001953125)(0.21892595291137695, 1.7621688842773438)(0.45236897468566895, 5.826240539550781)(0.8999118804931641, 12.413169860839844)(1.5755689144134521, 18.50699234008789)(2.3989739418029785, 23.59320831298828)(4.121166944503784, 27.472999572753906)(9.366325855255127, 39.209415435791016)(12.601274013519287, 45.76560592651367)(17.65221095085144, 56.153629302978516)(98.287752866745, 58.902060985565186)(155.79948091506958, 163.33255100250244)",
            "programs_evaluated": 59
        }
    ],
    "world": {
        "seed": 999999,
        "description": "Desert. No obstacles."
    }
}
