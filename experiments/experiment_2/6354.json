{
    "avg_time": 309.6157027085622,
    "experiment": {
        "number": 2,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACTS].\nAllow taking multiple actions after best program.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 298.74715995788574,
            "best_reward_over_time": "(0.6295340061187744, 0.7725448608398438)(13.420886039733887, 0.9250946044921875)(22.816912174224854, 1.865570068359375)(36.712865114212036, 1.8825607299804688)(37.36711597442627, 2.3942031860351562)(38.15842008590698, 4.5526580810546875)(39.18670415878296, 8.516525268554688)(40.26258206367493, 9.530029296875)(41.40656018257141, 10.547782897949219)(42.657670974731445, 12.544734954833984)(44.2191960811615, 16.403568267822266)(46.015395164489746, 19.38787841796875)(51.255370140075684, 19.39600372314453)(55.65394401550293, 27.364459991455078)(57.83958315849304, 31.53017807006836)(69.81190800666809, 32.316802978515625)(75.47450017929077, 37.54220962524414)(78.48440909385681, 37.84611511230469)(98.87949204444885, 42.820640563964844)(102.37545204162598, 45.60079383850098)(112.65710306167603, 51.06378936767578)(116.62874913215637, 53.82109069824219)(136.95654106140137, 62.01541328430176)(166.06744718551636, 70.2017412185669)(201.61103200912476, 72.89434838294983)(297.2909710407257, 173.2374666929245)",
            "programs_evaluated": 132
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 315.96496200561523,
            "best_reward_over_time": "(0.16158390045166016, 0.7725448608398438)(12.025904893875122, 0.9250946044921875)(21.519078969955444, 1.865570068359375)(36.046597957611084, 1.8825607299804688)(36.707748889923096, 2.3942031860351562)(37.48834991455078, 4.5526580810546875)(38.55621910095215, 8.516525268554688)(39.641380071640015, 9.530029296875)(40.82570195198059, 10.547782897949219)(42.113075971603394, 12.544734954833984)(43.71019506454468, 16.403568267822266)(45.57775402069092, 19.38787841796875)(51.10981106758118, 19.39600372314453)(55.95411205291748, 27.364459991455078)(58.545708894729614, 31.53017807006836)(71.10032296180725, 32.316802978515625)(77.13982796669006, 37.54220962524414)(80.38159394264221, 37.84611511230469)(101.72524905204773, 42.820640563964844)(105.54093408584595, 45.60079383850098)(117.15367102622986, 51.06378936767578)(121.62182188034058, 53.82109069824219)(142.19645500183105, 62.01541328430176)(172.76263308525085, 70.2017412185669)(212.12467789649963, 72.89434838294983)(315.964879989624, 173.2374666929245)",
            "programs_evaluated": 132
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 314.13498616218567,
            "best_reward_over_time": "(0.1264350414276123, 0.7725448608398438)(12.39208698272705, 0.9250946044921875)(22.257018089294434, 1.865570068359375)(36.646058082580566, 1.8825607299804688)(37.32550406455994, 2.3942031860351562)(38.13190293312073, 4.5526580810546875)(39.192564964294434, 8.516525268554688)(40.26281404495239, 9.530029296875)(41.39567804336548, 10.547782897949219)(42.63067698478699, 12.544734954833984)(44.231751918792725, 16.403568267822266)(46.02780604362488, 19.38787841796875)(51.722289085388184, 19.39600372314453)(56.72070789337158, 27.364459991455078)(59.25062799453735, 31.53017807006836)(71.56517195701599, 32.316802978515625)(77.45798993110657, 37.54220962524414)(80.67629408836365, 37.84611511230469)(102.8178539276123, 42.820640563964844)(106.5031909942627, 45.60079383850098)(117.74774599075317, 51.06378936767578)(122.13054990768433, 53.82109069824219)(142.7286729812622, 62.01541328430176)(172.34526801109314, 70.2017412185669)(211.1130039691925, 72.89434838294983)(314.1349198818207, 173.2374666929245)",
            "programs_evaluated": 132
        }
    ],
    "world": {
        "seed": 6354,
        "description": "Many trees. Small hill."
    }
}
