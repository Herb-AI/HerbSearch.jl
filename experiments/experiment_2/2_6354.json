{
    "avg_time": 304.00358271598816,
    "experiment": {
        "number": 2,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACTS].\nAllow taking multiple actions after best program.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 295.91589307785034,
            "best_reward_over_time": "(0.6621830463409424, 0.7725448608398438)(13.850344896316528, 0.9250946044921875)(22.98130989074707, 1.865570068359375)(36.5955228805542, 1.8825607299804688)(37.300950050354004, 2.3942031860351562)(38.19649887084961, 4.5526580810546875)(39.23065805435181, 8.516525268554688)(40.420111894607544, 9.530029296875)(41.572685956954956, 10.547782897949219)(42.81662106513977, 12.544734954833984)(44.391403913497925, 16.403568267822266)(46.169260025024414, 19.38787841796875)(51.22518301010132, 19.39600372314453)(55.58070993423462, 27.364459991455078)(57.8844530582428, 31.53017807006836)(69.08587288856506, 32.316802978515625)(74.7295138835907, 37.54220962524414)(77.71767687797546, 37.84611511230469)(97.76852607727051, 42.820640563964844)(101.48602390289307, 45.60079383850098)(112.13593602180481, 51.06378936767578)(116.54245901107788, 53.82109069824219)(137.2095820903778, 62.01541328430176)(163.95254707336426, 70.2017412185669)(200.81644701957703, 72.89434838294983)(294.48349595069885, 173.2374666929245)",
            "programs_evaluated": 132
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 310.94590401649475,
            "best_reward_over_time": "(0.16753292083740234, 0.7725448608398438)(12.11595106124878, 0.9250946044921875)(22.118059873580933, 1.865570068359375)(36.77747106552124, 1.8825607299804688)(37.55434489250183, 2.3942031860351562)(38.488471031188965, 4.5526580810546875)(39.50770306587219, 8.516525268554688)(40.70008587837219, 9.530029296875)(41.878313064575195, 10.547782897949219)(43.09731888771057, 12.544734954833984)(44.575217962265015, 16.403568267822266)(46.314615964889526, 19.38787841796875)(51.607611894607544, 19.39600372314453)(56.154507875442505, 27.364459991455078)(58.48259902000427, 31.53017807006836)(70.64908599853516, 32.316802978515625)(76.3721010684967, 37.54220962524414)(79.43841505050659, 37.84611511230469)(101.36434388160706, 42.820640563964844)(105.10797905921936, 45.60079383850098)(116.11201500892639, 51.06378936767578)(120.57378101348877, 53.82109069824219)(142.7981789112091, 62.01541328430176)(172.38703989982605, 70.2017412185669)(210.29637503623962, 72.89434838294983)(310.9458029270172, 173.2374666929245)",
            "programs_evaluated": 132
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 305.1489510536194,
            "best_reward_over_time": "(0.14184188842773438, 0.7725448608398438)(12.583420991897583, 0.9250946044921875)(22.65681290626526, 1.865570068359375)(36.64173603057861, 1.8825607299804688)(37.377032995224, 2.3942031860351562)(38.30770492553711, 4.5526580810546875)(39.38185095787048, 8.516525268554688)(40.62338399887085, 9.530029296875)(41.83469104766846, 10.547782897949219)(43.16058397293091, 12.544734954833984)(44.86632490158081, 16.403568267822266)(46.741113901138306, 19.38787841796875)(52.33901405334473, 19.39600372314453)(56.526103019714355, 27.364459991455078)(58.63544297218323, 31.53017807006836)(69.9856629371643, 32.316802978515625)(75.58146595954895, 37.54220962524414)(78.36232304573059, 37.84611511230469)(98.8212959766388, 42.820640563964844)(102.1104519367218, 45.60079383850098)(113.28469491004944, 51.06378936767578)(117.85845685005188, 53.82109069824219)(139.1401069164276, 62.01541328430176)(167.45089483261108, 70.2017412185669)(204.79656887054443, 72.89434838294983)(305.1488699913025, 173.2374666929245)",
            "programs_evaluated": 132
        }
    ],
    "world": {
        "seed": 6354,
        "description": "Many trees. Small hill."
    }
}
