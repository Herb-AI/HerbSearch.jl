{
    "avg_time": 304.16493678092957,
    "experiment": {
        "number": 2,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACTS].\nAllow taking multiple actions after best program.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 297.32988119125366,
            "best_reward_over_time": "(0.6918060779571533, 0.7725448608398438)(13.785518884658813, 0.9250946044921875)(23.74060606956482, 1.865570068359375)(37.886656045913696, 1.8825607299804688)(38.56020402908325, 2.3942031860351562)(39.46072697639465, 4.5526580810546875)(40.4456570148468, 8.516525268554688)(41.57825207710266, 9.530029296875)(42.68246102333069, 10.547782897949219)(43.91601300239563, 12.544734954833984)(45.43635606765747, 16.403568267822266)(47.10528492927551, 19.38787841796875)(52.21953201293945, 19.39600372314453)(56.58229398727417, 27.364459991455078)(58.86866593360901, 31.53017807006836)(70.30017399787903, 32.316802978515625)(75.85690689086914, 37.54220962524414)(78.74107503890991, 37.84611511230469)(98.99530386924744, 42.820640563964844)(102.81780004501343, 45.60079383850098)(113.29843497276306, 51.06378936767578)(117.60326194763184, 53.82109069824219)(138.45775294303894, 62.01541328430176)(166.9012598991394, 70.2017412185669)(202.1832559108734, 72.89434838294983)(295.889445066452, 173.2374666929245)",
            "programs_evaluated": 132
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 307.340213060379,
            "best_reward_over_time": "(0.15852785110473633, 0.7725448608398438)(12.648380994796753, 0.9250946044921875)(22.925442934036255, 1.865570068359375)(37.96890902519226, 1.8825607299804688)(38.67363691329956, 2.3942031860351562)(39.62761092185974, 4.5526580810546875)(40.715373039245605, 8.516525268554688)(41.93458104133606, 9.530029296875)(43.07942295074463, 10.547782897949219)(44.381234884262085, 12.544734954833984)(46.01605987548828, 16.403568267822266)(47.825984954833984, 19.38787841796875)(53.234943866729736, 19.39600372314453)(57.73681306838989, 27.364459991455078)(60.07183289527893, 31.53017807006836)(72.06630301475525, 32.316802978515625)(77.90334987640381, 37.54220962524414)(80.9943208694458, 37.84611511230469)(101.0705509185791, 42.820640563964844)(104.96496486663818, 45.60079383850098)(116.4635100364685, 51.06378936767578)(120.65608406066895, 53.82109069824219)(142.75982689857483, 62.01541328430176)(172.25849795341492, 70.2017412185669)(208.81844806671143, 72.89434838294983)(307.3401429653168, 173.2374666929245)",
            "programs_evaluated": 132
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 307.824716091156,
            "best_reward_over_time": "(0.14232611656188965, 0.7725448608398438)(12.38988709449768, 0.9250946044921875)(22.02839207649231, 1.865570068359375)(36.76585102081299, 1.8825607299804688)(37.43956208229065, 2.3942031860351562)(38.31535196304321, 4.5526580810546875)(39.36934494972229, 8.516525268554688)(40.553877115249634, 9.530029296875)(41.73060607910156, 10.547782897949219)(43.026193141937256, 12.544734954833984)(44.62372803688049, 16.403568267822266)(46.411906003952026, 19.38787841796875)(51.873130083084106, 19.39600372314453)(56.06226396560669, 27.364459991455078)(58.43727707862854, 31.53017807006836)(70.29511308670044, 32.316802978515625)(75.92474412918091, 37.54220962524414)(78.97920513153076, 37.84611511230469)(99.97642111778259, 42.820640563964844)(103.93168807029724, 45.60079383850098)(114.99397110939026, 51.06378936767578)(119.39554405212402, 53.82109069824219)(142.25137305259705, 62.01541328430176)(172.1109220981598, 70.2017412185669)(209.37243008613586, 72.89434838294983)(307.8246510028839, 173.2374666929245)",
            "programs_evaluated": 132
        }
    ],
    "world": {
        "seed": 6354,
        "description": "Many trees. Small hill."
    }
}
