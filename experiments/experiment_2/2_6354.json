{
    "avg_time": 305.7842965920766,
    "experiment": {
        "number": 2,
        "description": "Partial solution: reward > best_reward + 0.2.\nCycle length 6.\nSelect 5 programs with highest reward.\nUpdate based on last action; fit = min(best_reward / 100, 1); replace start symbol with [best_program; ACTS].\nAllow taking multiple actions after best program.",
        "grammar": [
            "4 : SEQ => ACT",
            "4 : ACT => [A]",
            "4 : ACT => [ACT; A]",
            "4 : A => (TIMES, Dict(\"move\" => DIR, \"sprint\" => 1, \"jump\" => 1))",
            "4 : DIR => 1",
            "4 : DIR => 2",
            "4 : DIR => 4",
            "4 : DIR => 8",
            "4 : DIR => 5",
            "4 : DIR => 9",
            "4 : DIR => 6",
            "4 : DIR => 10",
            "4 : TIMES => 5",
            "4 : TIMES => 10",
            "4 : TIMES => 25",
            "4 : TIMES => 50",
            "4 : TIMES => 75",
            "4 : TIMES => 100"
        ]
    },
    "tries": [
        {
            "number": 1,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 295.8165919780731,
            "best_reward_over_time": "(0.6690161228179932, 0.7725448608398438)(13.778667211532593, 0.9250946044921875)(23.745460033416748, 1.865570068359375)(38.59459710121155, 1.8825607299804688)(39.24041199684143, 2.3942031860351562)(40.081735134124756, 4.5526580810546875)(41.09964609146118, 8.516525268554688)(42.26211404800415, 9.530029296875)(43.25221109390259, 10.547782897949219)(44.33826422691345, 12.544734954833984)(45.75939202308655, 16.403568267822266)(47.47298002243042, 19.38787841796875)(52.63494515419006, 19.39600372314453)(56.85051918029785, 27.364459991455078)(59.14374303817749, 31.53017807006836)(70.14222812652588, 32.316802978515625)(75.7977511882782, 37.54220962524414)(78.62657022476196, 37.84611511230469)(98.60990309715271, 42.820640563964844)(102.31341505050659, 45.60079383850098)(112.96998500823975, 51.06378936767578)(117.33798122406006, 53.82109069824219)(137.34701204299927, 62.01541328430176)(165.52804803848267, 70.2017412185669)(201.13423013687134, 72.89434838294983)(294.3983311653137, 173.2374666929245)",
            "programs_evaluated": 132
        },
        {
            "number": 2,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 311.18623089790344,
            "best_reward_over_time": "(0.14829683303833008, 0.7725448608398438)(12.849870920181274, 0.9250946044921875)(23.024860858917236, 1.865570068359375)(37.937381982803345, 1.8825607299804688)(38.61377191543579, 2.3942031860351562)(39.498488903045654, 4.5526580810546875)(40.56187891960144, 8.516525268554688)(41.76126194000244, 9.530029296875)(42.93938899040222, 10.547782897949219)(44.24425983428955, 12.544734954833984)(45.87481689453125, 16.403568267822266)(47.645206928253174, 19.38787841796875)(53.11020588874817, 19.39600372314453)(57.7188777923584, 27.364459991455078)(60.117331981658936, 31.53017807006836)(72.21534585952759, 32.316802978515625)(77.89317297935486, 37.54220962524414)(80.8755669593811, 37.84611511230469)(101.730712890625, 42.820640563964844)(105.56136798858643, 45.60079383850098)(116.569344997406, 51.06378936767578)(120.8755738735199, 53.82109069824219)(143.11393284797668, 62.01541328430176)(173.03615188598633, 70.2017412185669)(211.11640191078186, 72.89434838294983)(311.18615984916687, 173.2374666929245)",
            "programs_evaluated": 132
        },
        {
            "number": 3,
            "program": "Tuple{Int64, Dict{String, Integer}}[(5, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x01)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (75, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x04)), (50, Dict(\"sprint\" => 1, \"jump\" => 1, \"move\" => 0x09))]",
            "time": 310.3500669002533,
            "best_reward_over_time": "(0.18020009994506836, 0.7725448608398438)(11.915889978408813, 0.9250946044921875)(22.10896611213684, 1.865570068359375)(36.210769176483154, 1.8825607299804688)(36.93629312515259, 2.3942031860351562)(37.87305998802185, 4.5526580810546875)(38.944841146469116, 8.516525268554688)(40.16522216796875, 9.530029296875)(41.3220591545105, 10.547782897949219)(42.43075919151306, 12.544734954833984)(43.840102195739746, 16.403568267822266)(45.522385120391846, 19.38787841796875)(50.98565912246704, 19.39600372314453)(55.54078006744385, 27.364459991455078)(57.861490964889526, 31.53017807006836)(70.04836297035217, 32.316802978515625)(75.2196409702301, 37.54220962524414)(78.28038096427917, 37.84611511230469)(98.94352912902832, 42.820640563964844)(102.84968209266663, 45.60079383850098)(114.48385500907898, 51.06378936767578)(118.9955940246582, 53.82109069824219)(140.5776491165161, 62.01541328430176)(170.4716601371765, 70.2017412185669)(208.26289010047913, 72.89434838294983)(310.35001707077026, 173.2374666929245)",
            "programs_evaluated": 132
        }
    ],
    "world": {
        "seed": 6354,
        "description": "Many trees. Small hill."
    }
}
