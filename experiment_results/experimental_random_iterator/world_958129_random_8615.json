{
    "checkpoint_times": [
        0.0010001659393310547,
        13.790000200271606,
        15.413000106811523,
        16.307000160217285
    ],
    "world_seed": 958129,
    "frangel_config": {
        "max_time": 40.0,
        "try_to_simplify": false,
        "compare_programs_by_length": true,
        "verbose_level": 0,
        "generation": {
            "max_size": 40,
            "use_fragments_chance": 0.5,
            "use_entire_fragment_chance": 0.5,
            "use_angelic_conditions_chance": 0.2,
            "similar_new_extra_size": 8,
            "gen_similar_prob_new": 0.25
        },
        "angelic": {
            "max_time": 0.1,
            "boolean_expr_max_size": 6,
            "max_execute_attempts": 4,
            "max_allowed_fails": 0.75,
            "angelic_rulenode": null
        }
    },
    "frangel_seed": 8615,
    "solved": true,
    "used_fragments": [
        {
            "fragment": "2,",
            "time": 0.7150001525878906
        },
        {
            "fragment": "3{5{8{9,23,26,28}17}}",
            "time": 0.7150001525878906
        },
        {
            "fragment": "1{2,3{5{8{9,23,26,28}17}}21}",
            "time": 0.7150001525878906
        },
        {
            "fragment": "3{5{8{9,23,26,28}17}}",
            "time": 0.7150001525878906
        },
        {
            "fragment": "21,",
            "time": 0.7150001525878906
        },
        {
            "fragment": "2,",
            "time": 0.7150001525878906
        },
        {
            "fragment": "17,",
            "time": 0.7150001525878906
        },
        {
            "fragment": "8{9,23,26,28}",
            "time": 0.7150001525878906
        },
        {
            "fragment": "3{5{8{9,23,26,28}17}}",
            "time": 0.754000186920166
        },
        {
            "fragment": "2,",
            "time": 0.754000186920166
        },
        {
            "fragment": "3{5{8{9,23,26,28}17}}",
            "time": 0.754000186920166
        },
        {
            "fragment": "1{2,3{5{8{9,23,26,28}17}}21}",
            "time": 0.754000186920166
        },
        {
            "fragment": "2,",
            "time": 0.754000186920166
        },
        {
            "fragment": "3{5{8{9,23,26,28}17}}",
            "time": 0.754000186920166
        },
        {
            "fragment": "1{2,3{5{8{9,23,26,28}17}}21}",
            "time": 3.328000068664551
        },
        {
            "fragment": "1{2,3{5{8{9,23,26,28}17}}21}",
            "time": 3.3970000743865967
        },
        {
            "fragment": "1{2,3{5{8{9,23,26,28}17}}21}",
            "time": 4.067000150680542
        },
        {
            "fragment": "2,",
            "time": 4.067000150680542
        },
        {
            "fragment": "9,",
            "time": 4.067000150680542
        },
        {
            "fragment": "23,",
            "time": 4.067000150680542
        },
        {
            "fragment": "28,",
            "time": 4.067000150680542
        },
        {
            "fragment": "21,",
            "time": 4.067000150680542
        },
        {
            "fragment": "1{2,3{5{8{9,23,26,28}17}}21}",
            "time": 4.133000135421753
        },
        {
            "fragment": "2,",
            "time": 4.134000062942505
        },
        {
            "fragment": "9,",
            "time": 4.134000062942505
        },
        {
            "fragment": "23,",
            "time": 4.134000062942505
        },
        {
            "fragment": "26,",
            "time": 4.134000062942505
        },
        {
            "fragment": "28,",
            "time": 4.134000062942505
        },
        {
            "fragment": "21,",
            "time": 4.134000062942505
        },
        {
            "fragment": "1{2,3{5{8{9,23,26,28}17}}21}",
            "time": 4.134000062942505
        },
        {
            "fragment": "2,",
            "time": 4.134000062942505
        },
        {
            "fragment": "3{5{8{9,23,26,28}17}}",
            "time": 4.134000062942505
        },
        {
            "fragment": "9,",
            "time": 4.187000036239624
        },
        {
            "fragment": "23,",
            "time": 4.187000036239624
        },
        {
            "fragment": "26,",
            "time": 4.187000036239624
        },
        {
            "fragment": "28,",
            "time": 4.187000036239624
        },
        {
            "fragment": "17,",
            "time": 4.187000036239624
        },
        {
            "fragment": "1{2,3{5{8{9,23,26,28}17}}21}",
            "time": 4.187000036239624
        },
        {
            "fragment": "1{2,3{5{8{9,23,26,28}17}}21}",
            "time": 4.187000036239624
        },
        {
            "fragment": "2,",
            "time": 4.187000036239624
        },
        {
            "fragment": "5{8{9,23,26,28}17}",
            "time": 4.187000036239624
        },
        {
            "fragment": "1{2,3{5{8{13,23,26,28}17}}21}",
            "time": 6.2250001430511475
        },
        {
            "fragment": "2,",
            "time": 6.3450000286102295
        },
        {
            "fragment": "3{5{8{13,23,26,28}17}}",
            "time": 6.3450000286102295
        },
        {
            "fragment": "1{2,3{5{8{13,23,26,28}17}}21}",
            "time": 8.23800015449524
        },
        {
            "fragment": "3{5{8{13,23,26,28}17}}",
            "time": 8.23800015449524
        },
        {
            "fragment": "1{2,3{5{8{13,23,26,28}17}}21}",
            "time": 8.23800015449524
        },
        {
            "fragment": "1{2,3{5{8{13,23,26,28}17}}21}",
            "time": 8.290000200271606
        },
        {
            "fragment": "1{2,3{5{8{13,23,26,28}17}}21}",
            "time": 8.290000200271606
        },
        {
            "fragment": "3{5{8{13,23,26,28}17}}",
            "time": 8.319000005722046
        },
        {
            "fragment": "1{2,3{5{8{13,23,26,28}17}}21}",
            "time": 8.319000005722046
        },
        {
            "fragment": "1{2,3{5{8{13,23,26,28}17}}21}",
            "time": 8.319000005722046
        }
    ],
    "experiment_description": "Experimental random iterator - In this experiment, the random iterator is modified to give a higher probability to basic rules used in generation less frequently.",
    "iterations": [
        {
            "final_grammar": "1: Program = begin\n    state = Init\n    Blocks\n    End\nend\n2: Init = mc_init(start_pos)\n3: Blocks = Block\n4: Blocks = begin\n    Block\n    Blocks\nend\n5: Block = while true\n    Move\n    Bool || break\nend\n6: Block = Move\n7: Block = if Bool\n    Move\nend\n8: Move = mc_move!(state, Direction, Times, Sprint, Jump)\n9: Direction = [\"forward\"]\n10: Direction = [\"back\"]\n11: Direction = [\"left\"]\n12: Direction = [\"right\"]\n13: Direction = [\"forward\", \"left\"]\n14: Direction = [\"forward\", \"right\"]\n15: Direction = [\"back\", \"left\"]\n16: Direction = [\"back\", \"right\"]\n17: Bool = mc_was_good_move(state)\n18: Bool = mc_has_moved(state)\n19: Bool = mc_is_done(state)\n20: Bool = !Bool\n21: End = mc_end(state)\n22: Times = 1\n23: Times = 2\n24: Times = 3\n25: Times = 4\n26: Sprint = true\n27: Sprint = false\n28: Jump = true\n29: Jump = false\n",
            "initial_position": [
                169.5,
                71.0,
                234.5
            ],
            "iterations": 31,
            "runtime": 13.790000200271606
        },
        {
            "final_grammar": "1: Program = begin\n    state = Init\n    Blocks\n    End\nend\n2: Init = mc_init(start_pos)\n3: Blocks = Block\n4: Blocks = begin\n    Block\n    Blocks\nend\n5: Block = while true\n    Move\n    Bool || break\nend\n6: Block = Move\n7: Block = if Bool\n    Move\nend\n8: Move = mc_move!(state, Direction, Times, Sprint, Jump)\n9: Direction = [\"forward\"]\n10: Direction = [\"back\"]\n11: Direction = [\"left\"]\n12: Direction = [\"right\"]\n13: Direction = [\"forward\", \"left\"]\n14: Direction = [\"forward\", \"right\"]\n15: Direction = [\"back\", \"left\"]\n16: Direction = [\"back\", \"right\"]\n17: Bool = mc_was_good_move(state)\n18: Bool = mc_has_moved(state)\n19: Bool = mc_is_done(state)\n20: Bool = !Bool\n21: End = mc_end(state)\n22: Times = 1\n23: Times = 2\n24: Times = 3\n25: Times = 4\n26: Sprint = true\n27: Sprint = false\n28: Jump = true\n29: Jump = false\n",
            "initial_position": [
                208.54382294690623,
                66.7531999805212,
                297.46671814317324
            ],
            "iterations": 7,
            "runtime": 1.622999906539917
        },
        {
            "final_grammar": "1: Program = begin\n    state = Init\n    Blocks\n    End\nend\n2: Init = mc_init(start_pos)\n3: Blocks = Block\n4: Blocks = begin\n    Block\n    Blocks\nend\n5: Block = while true\n    Move\n    Bool || break\nend\n6: Block = Move\n7: Block = if Bool\n    Move\nend\n8: Move = mc_move!(state, Direction, Times, Sprint, Jump)\n9: Direction = [\"forward\"]\n10: Direction = [\"back\"]\n11: Direction = [\"left\"]\n12: Direction = [\"right\"]\n13: Direction = [\"forward\", \"left\"]\n14: Direction = [\"forward\", \"right\"]\n15: Direction = [\"back\", \"left\"]\n16: Direction = [\"back\", \"right\"]\n17: Bool = mc_was_good_move(state)\n18: Bool = mc_has_moved(state)\n19: Bool = mc_is_done(state)\n20: Bool = !Bool\n21: End = mc_end(state)\n22: Times = 1\n23: Times = 2\n24: Times = 3\n25: Times = 4\n26: Sprint = true\n27: Sprint = false\n28: Jump = true\n29: Jump = false\n",
            "initial_position": [
                214.27676708518405,
                66.0,
                294.30000001192093
            ],
            "iterations": 2,
            "runtime": 0.8929998874664307
        },
        {
            "final_grammar": "1: Program = begin\n    state = Init\n    Blocks\n    End\nend\n2: Init = mc_init(start_pos)\n3: Blocks = Block\n4: Blocks = begin\n    Block\n    Blocks\nend\n5: Block = while true\n    Move\n    Bool || break\nend\n6: Block = Move\n7: Block = if Bool\n    Move\nend\n8: Move = mc_move!(state, Direction, Times, Sprint, Jump)\n9: Direction = [\"forward\"]\n10: Direction = [\"back\"]\n11: Direction = [\"left\"]\n12: Direction = [\"right\"]\n13: Direction = [\"forward\", \"left\"]\n14: Direction = [\"forward\", \"right\"]\n15: Direction = [\"back\", \"left\"]\n16: Direction = [\"back\", \"right\"]\n17: Bool = mc_was_good_move(state)\n18: Bool = mc_has_moved(state)\n19: Bool = mc_is_done(state)\n20: Bool = !Bool\n21: End = mc_end(state)\n22: Times = 1\n23: Times = 2\n24: Times = 3\n25: Times = 4\n26: Sprint = true\n27: Sprint = false\n28: Jump = true\n29: Jump = false\n",
            "initial_position": [
                214.27676708518405,
                66.0,
                294.4273999929428
            ],
            "iterations": 2,
            "runtime": 0.12100005149841309
        }
    ],
    "specification_config": {
        "max_reward": 74.0,
        "reward_percentages": [
            0.1,
            0.2,
            0.3,
            0.4,
            0.5,
            0.6,
            0.7,
            0.8,
            0.9
        ],
        "require_done": false
    },
    "world_description": "Relatively flat. Some trees. Small cave opening.",
    "generated_programs": [
        {
            "time": 0.0010001659393310547,
            "program": "1{2,3{5{8{9,23,26,28}17}}21}"
        },
        {
            "time": 0.7150001525878906,
            "program": "1{2,3{7{17,8{9,25,26,28}}}21}"
        },
        {
            "time": 0.754000186920166,
            "program": "1{2,3{5{8{9,23,26,28}hole[Bool[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]}}21}"
        },
        {
            "time": 3.328000068664551,
            "program": "1{2,3{6{8{9,24,26,28}}}21}"
        },
        {
            "time": 3.3970000743865967,
            "program": "1{2,3{5{8{9,25,26,28}17}}21}"
        },
        {
            "time": 4.067000150680542,
            "program": "1{2,3{6{8{9,23,26,28}}}21}"
        },
        {
            "time": 4.134000062942505,
            "program": "1{2,3{5{8{16,22,27,28}17}}21}"
        },
        {
            "time": 4.187000036239624,
            "program": "1{2,3{5{8{13,23,26,28}17}}21}"
        },
        {
            "time": 6.226000070571899,
            "program": "1{2,3{6{8{14,25,27,29}}}21}"
        },
        {
            "time": 6.3450000286102295,
            "program": "1{2,3{5{8{13,23,26,29}17}}21}"
        },
        {
            "time": 8.23800015449524,
            "program": "1{2,3{7{17,8{16,22,26,29}}}21}"
        },
        {
            "time": 8.290000200271606,
            "program": "1{2,3{5{8{12,22,26,29}19}}21}"
        },
        {
            "time": 8.319000005722046,
            "program": "1{2,3{5{8{13,25,26,28}17}}21}"
        },
        {
            "time": 13.790000200271606,
            "program": "1{2,3{7{20{18}8{10,23,27,28}}}21}"
        },
        {
            "time": 13.871999979019165,
            "program": "1{2,4{5{8{9,25,26,29}18}3{6{8{12,22,26,28}}}}21}"
        },
        {
            "time": 14.208000183105469,
            "program": "1{2,3{5{8{11,23,27,29}19}}21}"
        },
        {
            "time": 14.26800012588501,
            "program": "1{2,3{6{8{14,25,27,28}}}21}"
        },
        {
            "time": 14.344000101089478,
            "program": "1{2,3{6{8{11,24,27,28}}}21}"
        },
        {
            "time": 14.415000200271606,
            "program": "1{2,3{6{8{15,24,27,29}}}21}"
        },
        {
            "time": 14.486999988555908,
            "program": "1{2,3{5{8{15,23,26,29}17}}21}"
        },
        {
            "time": 15.413000106811523,
            "program": "1{2,4{6{8{13,22,26,29}}3{7{hole[Bool[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],8{16,24,26,28}}}}21}"
        },
        {
            "time": 16.205000162124634,
            "program": "1{2,3{6{8{9,22,27,29}}}21}"
        },
        {
            "time": 16.307000160217285,
            "program": "1{2,3{6{8{13,22,27,28}}}21}"
        },
        {
            "time": 16.355000019073486,
            "program": "1{2,3{6{8{13,24,26,29}}}21}"
        }
    ],
    "try_index": 1,
    "runtime": 16.427000045776367,
    "mined_fragments": [
        {
            "fragments": "RuleNode[1{2,3{5{8{9,23,26,28}17}}21}, 28,, 17,, 23,, 8{9,23,26,28}, 21,, 2,, 9,, 26,, 5{8{9,23,26,28}17}, 3{5{8{9,23,26,28}17}}]",
            "time": 0.7139999866485596
        },
        {
            "fragments": "RuleNode[28,, 17,, 23,, 13,, 5{8{13,23,26,28}17}, 2,, 3{5{8{13,23,26,28}17}}, 8{13,23,26,28}, 26,, 21,, 1{2,3{5{8{13,23,26,28}17}}21}]",
            "time": 6.223999977111816
        }
    ],
    "grammar": "1: Program = begin\n    state = Init\n    Blocks\n    End\nend\n2: Init = mc_init(start_pos)\n3: Blocks = Block\n4: Blocks = begin\n    Block\n    Blocks\nend\n5: Block = while true\n    Move\n    Bool || break\nend\n6: Block = Move\n7: Block = if Bool\n    Move\nend\n8: Move = mc_move!(state, Direction, Times, Sprint, Jump)\n9: Direction = [\"forward\"]\n10: Direction = [\"back\"]\n11: Direction = [\"left\"]\n12: Direction = [\"right\"]\n13: Direction = [\"forward\", \"left\"]\n14: Direction = [\"forward\", \"right\"]\n15: Direction = [\"back\", \"left\"]\n16: Direction = [\"back\", \"right\"]\n17: Bool = mc_was_good_move(state)\n18: Bool = mc_has_moved(state)\n19: Bool = mc_is_done(state)\n20: Bool = !Bool\n21: End = mc_end(state)\n22: Times = 1\n23: Times = 2\n24: Times = 3\n25: Times = 4\n26: Sprint = true\n27: Sprint = false\n28: Jump = true\n29: Jump = false\n",
    "evaluated_programs": [
        {
            "time": 0.7139999866485596,
            "reward": 11.833969116210938,
            "program": "1{2,3{5{8{9,23,26,28}17}}21}"
        },
        {
            "time": 0.754000186920166,
            "reward": 0.0,
            "program": "1{2,3{7{17,8{9,25,26,28}}}21}"
        },
        {
            "time": 3.3970000743865967,
            "reward": 0.508270263671875,
            "program": "1{2,3{6{8{9,24,26,28}}}21}"
        },
        {
            "time": 4.067000150680542,
            "reward": 11.833969116210938,
            "program": "1{2,3{5{8{9,25,26,28}17}}21}"
        },
        {
            "time": 4.133000135421753,
            "reward": 0.362152099609375,
            "program": "1{2,3{6{8{9,23,26,28}}}21}"
        },
        {
            "time": 4.186000108718872,
            "reward": -0.13311004638671875,
            "program": "1{2,3{5{8{16,22,27,28}17}}21}"
        },
        {
            "time": 6.223999977111816,
            "reward": 56.739837646484375,
            "program": "1{2,3{5{8{13,23,26,28}17}}21}"
        },
        {
            "time": 6.3440001010894775,
            "reward": 0.09340667724609375,
            "program": "1{2,3{6{8{14,25,27,29}}}21}"
        },
        {
            "time": 8.23800015449524,
            "reward": 25.1688232421875,
            "program": "1{2,3{5{8{13,23,26,29}17}}21}"
        },
        {
            "time": 8.290000200271606,
            "reward": 0.0,
            "program": "1{2,3{7{17,8{16,22,26,29}}}21}"
        },
        {
            "time": 8.319000005722046,
            "reward": -0.05792236328125,
            "program": "1{2,3{5{8{12,22,26,29}19}}21}"
        },
        {
            "time": 11.014000177383423,
            "reward": 69.10329914093018,
            "program": "1{2,3{5{8{13,25,26,28}17}}21}"
        },
        {
            "time": 13.871999979019165,
            "reward": 69.21867752075195,
            "program": "1{2,3{7{20{18}8{10,23,27,28}}}21}"
        },
        {
            "time": 14.208000183105469,
            "reward": 64.99727249145508,
            "program": "1{2,4{5{8{9,25,26,29}18}3{6{8{12,22,26,28}}}}21}"
        },
        {
            "time": 14.26800012588501,
            "reward": 69.24668312072754,
            "program": "1{2,3{5{8{11,23,27,29}19}}21}"
        },
        {
            "time": 14.344000101089478,
            "reward": 68.92687368392944,
            "program": "1{2,3{6{8{14,25,27,28}}}21}"
        },
        {
            "time": 14.415000200271606,
            "reward": 69.34947872161865,
            "program": "1{2,3{6{8{11,24,27,28}}}21}"
        },
        {
            "time": 14.486999988555908,
            "reward": 69.35426759719849,
            "program": "1{2,3{6{8{15,24,27,29}}}21}"
        },
        {
            "time": 14.958000183105469,
            "reward": 74.06933832168579,
            "program": "1{2,3{5{8{15,23,26,29}17}}21}"
        },
        {
            "time": 16.258000135421753,
            "reward": 74.12139225006104,
            "program": "1{2,3{6{8{9,22,27,29}}}21}"
        },
        {
            "time": 16.355000019073486,
            "reward": 73.77532732486725,
            "program": "1{2,3{6{8{13,22,27,28}}}21}"
        },
        {
            "time": 16.426000118255615,
            "reward": 174.0997395515442,
            "program": "1{2,3{6{8{13,24,26,29}}}21}"
        }
    ]
}
